# Databricks notebook source
newData = spark.read.parquet(f"mnt/raw/GTFS_BUS/Trips/*/*/*/*.parquet")
#newData.orderBy("trip_id", "stop_id").display()
newData.display()

# COMMAND ----------

# MAGIC %sql
# MAGIC CREATE DATABASE titan_recette;
# MAGIC --CREATE DATABASE gtfs_bus;
# MAGIC --CREATE DATABASE gtfs_tram;
# MAGIC --DROP DATABASE gtfs;

# COMMAND ----------

#key = "RECAR_ID|RECAR_REFPT_ID|RECAR_HRE_DEP_THEO"
key = "RECAR_ID"
tabKey = key.split("|")
expression =""
for id in tabKey:
    expression += "old."+id+" = updates."+id+" and "
expression = "".join(expression.rsplit(" and ", 1))

# COMMAND ----------

# MAGIC %sql
# MAGIC 
# MAGIC select
# MAGIC   `CalendarYear`,
# MAGIC   sum(cast(`nbre_validation` as DOUBLE)) as `C1`
# MAGIC from
# MAGIC   (
# MAGIC     select
# MAGIC       `OTBL`.`nbre_validation`,
# MAGIC       `ITBL`.`CalendarYear`
# MAGIC     from
# MAGIC       `default`.`validation` as `OTBL`
# MAGIC       left outer join `default`.`dim_calendar` as `ITBL` on (`OTBL`.`date_exploitation` = `ITBL`.`DateInt`)
# MAGIC   ) as `ITBL`
# MAGIC group by
# MAGIC   `CalendarYear`

# COMMAND ----------

# MAGIC %sql
# MAGIC 
# MAGIC 
# MAGIC SELECT 
# MAGIC   case when date_part('HOUR',FACT_VALIDATION.VALIDATIONDATE) < 4 then 
# MAGIC   date_add(FACT_VALIDATION.VALIDATIONDATE, -1) else
# MAGIC  FACT_VALIDATION.VALIDATIONDATE end as date_exploitation,
# MAGIC  FACT_VALIDATION.VALIDATIONID AS id_validation,
# MAGIC  FACT_VALIDATION.VALIDATIONDATEID AS validationdateid,
# MAGIC  date_part('DAY',FACT_VALIDATION.VALIDATIONDATE) as day,
# MAGIC  date_part('MONTH',FACT_VALIDATION.VALIDATIONDATE) as month,
# MAGIC  date_part('YEAR',FACT_VALIDATION.VALIDATIONDATE) as year,
# MAGIC  case when (FACT_VALIDATION.TCN is null or FACT_VALIDATION.TCN ='0') then FACT_VALIDATION.TICKETID
# MAGIC        when (FACT_VALIDATION.TICKETID is null) then FACT_VALIDATION.TCN
# MAGIC        else null
# MAGIC        end as num_carte_ticket,
# MAGIC       case when (FACT_VALIDATION.TCN is null or FACT_VALIDATION.TCN='0'  and length(PRODUCT.CODE)>4) then 'ticket'
# MAGIC        when (FACT_VALIDATION.TCN is null or FACT_VALIDATION.TCN ='0' ) then 'tcn'
# MAGIC        when (FACT_VALIDATION.TICKETID is null) then 'tcn'
# MAGIC        else 'inconnu'
# MAGIC        end as support_validation,
# MAGIC  case when ( case when FACT_VALIDATION.PRODUCTID is null and FACT_VALIDATION.VALIDATIONSTATUSID=2 then 1 else 0 end )=1 then 'EXTERNE' else rtrim(PRODUCT.CODE) end as code_produit,
# MAGIC   case when (VEHICLETYPE.DESCRIPTION='TRAMWAY') then 2 --'Tramway' 
# MAGIC       WHEN (VEHICLETYPE.DESCRIPTION='URBANBUS') then 1 --'Bus'
# MAGIC       WHEN (VEHICLETYPE.DESCRIPTION='NAVETTE FLUVIALE') then 3 --'Bus'
# MAGIC       else VEHICLETYPE.ID end
# MAGIC       as code_mode,
# MAGIC   CASE WHEN (CASE WHEN FACT_VALIDATION.LINEID=9998 THEN '9998' ELSE LINE.CODE END)='A' then '59'
# MAGIC    WHEN (CASE WHEN FACT_VALIDATION.LINEID=9998 THEN '9998' ELSE LINE.CODE END)='B' then '60'
# MAGIC    WHEN (CASE WHEN FACT_VALIDATION.LINEID=9998 THEN '9998' ELSE LINE.CODE END)='C' then '61'
# MAGIC    WHEN (CASE WHEN FACT_VALIDATION.LINEID=9998 THEN '9998' ELSE LINE.CODE END)='D' then '62'
# MAGIC   else 
# MAGIC   CASE WHEN FACT_VALIDATION.LINEID=9998 THEN '9998' ELSE LINE.CODE END
# MAGIC   end as code_ligne,
# MAGIC   STOP.NUM as code_arret,
# MAGIC   VEHICLE.PARKNUM as code_vehicule,
# MAGIC   CASE
# MAGIC WHEN (FACT_VALIDATION.VALIDATIONSTATEID=1 AND ( FACT_VALIDATION.CARDID ) IS NOT NULL) THEN Upper('Première validation CSC')
# MAGIC WHEN (FACT_VALIDATION.VALIDATIONSTATEID=2 AND ( FACT_VALIDATION.CARDID ) IS NOT NULL) THEN Upper('Correspondance CSC')
# MAGIC WHEN (FACT_VALIDATION.VALIDATIONSTATEID=1 AND ( FACT_VALIDATION.TICKETID ) IS NOT NULL) THEN Upper('Première validation BSC')
# MAGIC WHEN (FACT_VALIDATION.VALIDATIONSTATEID=2 AND ( FACT_VALIDATION.TICKETID ) IS NOT NULL) THEN Upper('Correspondance BSC')
# MAGIC ELSE 'INCONNU'
# MAGIC END as type_validation, 
# MAGIC   CASE when( FACT_VALIDATION.DIRECTION=0) Then 'I'
# MAGIC        when( FACT_VALIDATION.DIRECTION=1) Then 'A'
# MAGIC        when( FACT_VALIDATION.DIRECTION=2) Then 'R'
# MAGIC        when( FACT_VALIDATION.DIRECTION=4) Then 'NOK'
# MAGIC        ELSE NULL
# MAGIC   END as sens,
# MAGIC   count(FACT_VALIDATION.VALIDATIONID) as nbre_validation
# MAGIC FROM
# MAGIC   VALIDATIONREJECTREASON RIGHT OUTER JOIN FACT_VALIDATION ON (FACT_VALIDATION.FAILUREREASONID=VALIDATIONREJECTREASON.FAILUREREASONID)
# MAGIC    LEFT OUTER JOIN DIM_PRODUCT ON (FACT_VALIDATION.FAREPRODUCTITEMID=DIM_PRODUCT.FAREPRODUCTITEMID)
# MAGIC    LEFT OUTER JOIN PRODUCT ON (FACT_VALIDATION.PRODUCTID=PRODUCT.PRODUCTID)
# MAGIC    LEFT OUTER JOIN LINE ON (FACT_VALIDATION.LINEID=LINE.LINEID)
# MAGIC    LEFT OUTER JOIN ITINERARY ON (FACT_VALIDATION.ITINERARYID=ITINERARY.ITINERARYID)
# MAGIC    LEFT OUTER JOIN STOP ON (FACT_VALIDATION.FARESTOPID=STOP.STOPID)
# MAGIC    LEFT OUTER JOIN DEVICE ON (FACT_VALIDATION.DEVICEID=DEVICE.DEVICEID)
# MAGIC    LEFT OUTER JOIN DEVICETYPE ON (DEVICE.DEVICETYPEID=DEVICETYPE.DEVICETYPEID)
# MAGIC    LEFT OUTER JOIN VEHICLE ON (FACT_VALIDATION.VEHICLEID=VEHICLE.VEHICLEID)
# MAGIC    LEFT OUTER JOIN VEHICLETYPE ON (VEHICLETYPE.ID=VEHICLE.VEHICLETYPEID)
# MAGIC    LEFT OUTER JOIN CARD ON (FACT_VALIDATION.CARDID=CARD.CARDID)
# MAGIC    LEFT OUTER JOIN CARDTYPE ON (CARD.CARDTYPEID=CARDTYPE.CARDTYPEID)
# MAGIC    LEFT OUTER JOIN TICKET ON (FACT_VALIDATION.TICKETID=TICKET.TICKETID)
# MAGIC    LEFT OUTER JOIN CARDTYPE  Alias_of_CARDTYPE ON (TICKET.CARDTYPEID=Alias_of_CARDTYPE.CARDTYPEID)
# MAGIC WHERE DEVICETYPE.DESCRIPTION  IN  ( 'MOBILE TICKETING','VAL'  )
# MAGIC 
# MAGIC GROUP BY
# MAGIC case when date_part('hour',FACT_VALIDATION.VALIDATIONDATE) < 4  then 
# MAGIC   date_add(FACT_VALIDATION.VALIDATIONDATE , -1) else
# MAGIC   FACT_VALIDATION.VALIDATIONDATE end ,
# MAGIC   FACT_VALIDATION.VALIDATIONID,
# MAGIC   FACT_VALIDATION.VALIDATIONDATEID,
# MAGIC   VEHICLE.PARKNUM,
# MAGIC   STOP.NUM,
# MAGIC   CASE WHEN (CASE WHEN FACT_VALIDATION.LINEID=9998 THEN '9998' ELSE LINE.CODE END)='A' then '59'
# MAGIC    WHEN (CASE WHEN FACT_VALIDATION.LINEID=9998 THEN '9998' ELSE LINE.CODE END)='B' then '60'
# MAGIC    WHEN (CASE WHEN FACT_VALIDATION.LINEID=9998 THEN '9998' ELSE LINE.CODE END)='C' then '61'
# MAGIC    WHEN (CASE WHEN FACT_VALIDATION.LINEID=9998 THEN '9998' ELSE LINE.CODE END)='D' then '62'
# MAGIC   else 
# MAGIC   CASE WHEN FACT_VALIDATION.LINEID=9998 THEN '9998' ELSE LINE.CODE END
# MAGIC   end,
# MAGIC   case when ( case when FACT_VALIDATION.PRODUCTID is null and FACT_VALIDATION.VALIDATIONSTATUSID=2 then 1 else 0 end )=1 then 'EXTERNE' else rtrim(PRODUCT.CODE) end ,
# MAGIC   CASE when( FACT_VALIDATION.DIRECTION=0) Then 'I'
# MAGIC        when( FACT_VALIDATION.DIRECTION=1) Then 'A'
# MAGIC        when( FACT_VALIDATION.DIRECTION=2) Then 'R'
# MAGIC        when( FACT_VALIDATION.DIRECTION=4) Then 'NOK'
# MAGIC        ELSE NULL
# MAGIC   END,
# MAGIC   case when (FACT_VALIDATION.TCN is null or FACT_VALIDATION.TCN='0') then FACT_VALIDATION.TICKETID 
# MAGIC        when (FACT_VALIDATION.TICKETID is null) then FACT_VALIDATION.TCN 
# MAGIC        else null
# MAGIC        end,
# MAGIC       case when (FACT_VALIDATION.TCN is null or FACT_VALIDATION.TCN ='0'  and length(PRODUCT.CODE)>4) then 'ticket'
# MAGIC       when (FACT_VALIDATION.TCN is null or FACT_VALIDATION.TCN ='0' ) then 'tcn'
# MAGIC        when (FACT_VALIDATION.TICKETID is null) then  'tcn'
# MAGIC       else 'inconnu'
# MAGIC        end,
# MAGIC   CASE
# MAGIC WHEN (FACT_VALIDATION.VALIDATIONSTATEID=1 AND ( FACT_VALIDATION.CARDID ) IS NOT NULL) THEN Upper('Première validation CSC')
# MAGIC WHEN (FACT_VALIDATION.VALIDATIONSTATEID=2 AND ( FACT_VALIDATION.CARDID ) IS NOT NULL) THEN Upper('Correspondance CSC')
# MAGIC WHEN (FACT_VALIDATION.VALIDATIONSTATEID=1 AND ( FACT_VALIDATION.TICKETID ) IS NOT NULL) THEN Upper('Première validation BSC')
# MAGIC WHEN (FACT_VALIDATION.VALIDATIONSTATEID=2 AND ( FACT_VALIDATION.TICKETID ) IS NOT NULL) THEN Upper('Correspondance BSC')
# MAGIC ELSE 'INCONNU'
# MAGIC END, 
# MAGIC   case when (VEHICLETYPE.DESCRIPTION='TRAMWAY') then 2 --'Tramway' 
# MAGIC       WHEN (VEHICLETYPE.DESCRIPTION='URBANBUS') then 1 --'Bus'
# MAGIC       WHEN (VEHICLETYPE.DESCRIPTION='NAVETTE FLUVIALE') then 3 --'Bat3'
# MAGIC       else VEHICLETYPE.ID end
# MAGIC 
# MAGIC LIMIT 10

# COMMAND ----------

# MAGIC %sql
# MAGIC SELECT 
# MAGIC   case when date_part('HOUR',FACT_VALIDATION.VALIDATIONDATE) < 4 then 
# MAGIC   date_add(FACT_VALIDATION.VALIDATIONDATE, -1) else
# MAGIC  FACT_VALIDATION.VALIDATIONDATE end as date_exploitation,
# MAGIC  FACT_VALIDATION.VALIDATIONID AS id_validation,
# MAGIC  FACT_VALIDATION.VALIDATIONDATEID AS validationdateid,
# MAGIC  date_part('DAY',FACT_VALIDATION.VALIDATIONDATE) as day,
# MAGIC  date_part('MONTH',FACT_VALIDATION.VALIDATIONDATE) as month,
# MAGIC  date_part('YEAR',FACT_VALIDATION.VALIDATIONDATE) as year,
# MAGIC  case when (FACT_VALIDATION.TCN is null or FACT_VALIDATION.TCN ='0') then FACT_VALIDATION.TICKETID
# MAGIC        when (FACT_VALIDATION.TICKETID is null) then FACT_VALIDATION.TCN
# MAGIC        else null
# MAGIC        end as num_carte_ticket,
# MAGIC       case when (FACT_VALIDATION.TCN is null or FACT_VALIDATION.TCN='0'  and length(PRODUCT.CODE)>4) then 'ticket'
# MAGIC        when (FACT_VALIDATION.TCN is null or FACT_VALIDATION.TCN ='0' ) then 'tcn'
# MAGIC        when (FACT_VALIDATION.TICKETID is null) then 'tcn'
# MAGIC        else 'inconnu'
# MAGIC        end as support_validation,
# MAGIC  case when ( case when FACT_VALIDATION.PRODUCTID is null and FACT_VALIDATION.VALIDATIONSTATUSID=2 then 1 else 0 end )=1 then 'EXTERNE' else rtrim(PRODUCT.CODE) end as code_produit,
# MAGIC   case when (VEHICLETYPE.DESCRIPTION='TRAMWAY') then 2 --'Tramway' 
# MAGIC       WHEN (VEHICLETYPE.DESCRIPTION='URBANBUS') then 1 --'Bus'
# MAGIC       WHEN (VEHICLETYPE.DESCRIPTION='NAVETTE FLUVIALE') then 3 --'Bus'
# MAGIC       else VEHICLETYPE.ID end
# MAGIC       as code_mode,
# MAGIC   CASE WHEN (CASE WHEN FACT_VALIDATION.LINEID=9998 THEN '9998' ELSE LINE.CODE END)='A' then '59'
# MAGIC    WHEN (CASE WHEN FACT_VALIDATION.LINEID=9998 THEN '9998' ELSE LINE.CODE END)='B' then '60'
# MAGIC    WHEN (CASE WHEN FACT_VALIDATION.LINEID=9998 THEN '9998' ELSE LINE.CODE END)='C' then '61'
# MAGIC    WHEN (CASE WHEN FACT_VALIDATION.LINEID=9998 THEN '9998' ELSE LINE.CODE END)='D' then '62'
# MAGIC   else 
# MAGIC   CASE WHEN FACT_VALIDATION.LINEID=9998 THEN '9998' ELSE LINE.CODE END
# MAGIC   end as code_ligne,
# MAGIC   STOP.NUM as code_arret,
# MAGIC   VEHICLE.PARKNUM as code_vehicule,
# MAGIC   CASE
# MAGIC WHEN (FACT_VALIDATION.VALIDATIONSTATEID=1 AND ( FACT_VALIDATION.CARDID ) IS NOT NULL) THEN Upper('Première validation CSC')
# MAGIC WHEN (FACT_VALIDATION.VALIDATIONSTATEID=2 AND ( FACT_VALIDATION.CARDID ) IS NOT NULL) THEN Upper('Correspondance CSC')
# MAGIC WHEN (FACT_VALIDATION.VALIDATIONSTATEID=1 AND ( FACT_VALIDATION.TICKETID ) IS NOT NULL) THEN Upper('Première validation BSC')
# MAGIC WHEN (FACT_VALIDATION.VALIDATIONSTATEID=2 AND ( FACT_VALIDATION.TICKETID ) IS NOT NULL) THEN Upper('Correspondance BSC')
# MAGIC ELSE 'INCONNU'
# MAGIC END as type_validation, 
# MAGIC   CASE when( FACT_VALIDATION.DIRECTION=0) Then 'I'
# MAGIC        when( FACT_VALIDATION.DIRECTION=1) Then 'A'
# MAGIC        when( FACT_VALIDATION.DIRECTION=2) Then 'R'
# MAGIC        when( FACT_VALIDATION.DIRECTION=4) Then 'NOK'
# MAGIC        ELSE NULL
# MAGIC   END as sens,
# MAGIC   count(FACT_VALIDATION.VALIDATIONID) as nbre_validation
# MAGIC FROM
# MAGIC   VALIDATIONREJECTREASON RIGHT OUTER JOIN FACT_VALIDATION ON (FACT_VALIDATION.FAILUREREASONID=VALIDATIONREJECTREASON.FAILUREREASONID)
# MAGIC    LEFT OUTER JOIN DIM_PRODUCT ON (FACT_VALIDATION.FAREPRODUCTITEMID=DIM_PRODUCT.FAREPRODUCTITEMID)
# MAGIC    LEFT OUTER JOIN PRODUCT ON (FACT_VALIDATION.PRODUCTID=PRODUCT.PRODUCTID)
# MAGIC    LEFT OUTER JOIN LINE ON (FACT_VALIDATION.LINEID=LINE.LINEID)
# MAGIC    LEFT OUTER JOIN ITINERARY ON (FACT_VALIDATION.ITINERARYID=ITINERARY.ITINERARYID)
# MAGIC    LEFT OUTER JOIN STOP ON (FACT_VALIDATION.FARESTOPID=STOP.STOPID)
# MAGIC    LEFT OUTER JOIN DEVICE ON (FACT_VALIDATION.DEVICEID=DEVICE.DEVICEID)
# MAGIC    LEFT OUTER JOIN DEVICETYPE ON (DEVICE.DEVICETYPEID=DEVICETYPE.DEVICETYPEID)
# MAGIC    LEFT OUTER JOIN VEHICLE ON (FACT_VALIDATION.VEHICLEID=VEHICLE.VEHICLEID)
# MAGIC    LEFT OUTER JOIN VEHICLETYPE ON (VEHICLETYPE.ID=VEHICLE.VEHICLETYPEID)
# MAGIC    LEFT OUTER JOIN CARD ON (FACT_VALIDATION.CARDID=CARD.CARDID)
# MAGIC    LEFT OUTER JOIN CARDTYPE ON (CARD.CARDTYPEID=CARDTYPE.CARDTYPEID)
# MAGIC    LEFT OUTER JOIN TICKET ON (FACT_VALIDATION.TICKETID=TICKET.TICKETID)
# MAGIC    LEFT OUTER JOIN CARDTYPE  Alias_of_CARDTYPE ON (TICKET.CARDTYPEID=Alias_of_CARDTYPE.CARDTYPEID)
# MAGIC WHERE DEVICETYPE.DESCRIPTION  IN  ( 'MOBILE TICKETING','VAL'  )
# MAGIC 
# MAGIC GROUP BY
# MAGIC case when date_part('hour',FACT_VALIDATION.VALIDATIONDATE) < 4  then 
# MAGIC   date_add(FACT_VALIDATION.VALIDATIONDATE , -1) else
# MAGIC   FACT_VALIDATION.VALIDATIONDATE end ,
# MAGIC   FACT_VALIDATION.VALIDATIONID,
# MAGIC   FACT_VALIDATION.VALIDATIONDATE,
# MAGIC   FACT_VALIDATION.VALIDATIONDATEID,
# MAGIC   VEHICLE.PARKNUM,
# MAGIC   STOP.NUM,
# MAGIC   CASE WHEN (CASE WHEN FACT_VALIDATION.LINEID=9998 THEN '9998' ELSE LINE.CODE END)='A' then '59'
# MAGIC    WHEN (CASE WHEN FACT_VALIDATION.LINEID=9998 THEN '9998' ELSE LINE.CODE END)='B' then '60'
# MAGIC    WHEN (CASE WHEN FACT_VALIDATION.LINEID=9998 THEN '9998' ELSE LINE.CODE END)='C' then '61'
# MAGIC    WHEN (CASE WHEN FACT_VALIDATION.LINEID=9998 THEN '9998' ELSE LINE.CODE END)='D' then '62'
# MAGIC   else 
# MAGIC   CASE WHEN FACT_VALIDATION.LINEID=9998 THEN '9998' ELSE LINE.CODE END
# MAGIC   end,
# MAGIC   case when ( case when FACT_VALIDATION.PRODUCTID is null and FACT_VALIDATION.VALIDATIONSTATUSID=2 then 1 else 0 end )=1 then 'EXTERNE' else rtrim(PRODUCT.CODE) end ,
# MAGIC   CASE when( FACT_VALIDATION.DIRECTION=0) Then 'I'
# MAGIC        when( FACT_VALIDATION.DIRECTION=1) Then 'A'
# MAGIC        when( FACT_VALIDATION.DIRECTION=2) Then 'R'
# MAGIC        when( FACT_VALIDATION.DIRECTION=4) Then 'NOK'
# MAGIC        ELSE NULL
# MAGIC   END,
# MAGIC   case when (FACT_VALIDATION.TCN is null or FACT_VALIDATION.TCN='0') then FACT_VALIDATION.TICKETID 
# MAGIC        when (FACT_VALIDATION.TICKETID is null) then FACT_VALIDATION.TCN 
# MAGIC        else null
# MAGIC        end,
# MAGIC       case when (FACT_VALIDATION.TCN is null or FACT_VALIDATION.TCN ='0'  and length(PRODUCT.CODE)>4) then 'ticket'
# MAGIC       when (FACT_VALIDATION.TCN is null or FACT_VALIDATION.TCN ='0' ) then 'tcn'
# MAGIC        when (FACT_VALIDATION.TICKETID is null) then  'tcn'
# MAGIC       else 'inconnu'
# MAGIC        end,
# MAGIC   CASE
# MAGIC WHEN (FACT_VALIDATION.VALIDATIONSTATEID=1 AND ( FACT_VALIDATION.CARDID ) IS NOT NULL) THEN Upper('Première validation CSC')
# MAGIC WHEN (FACT_VALIDATION.VALIDATIONSTATEID=2 AND ( FACT_VALIDATION.CARDID ) IS NOT NULL) THEN Upper('Correspondance CSC')
# MAGIC WHEN (FACT_VALIDATION.VALIDATIONSTATEID=1 AND ( FACT_VALIDATION.TICKETID ) IS NOT NULL) THEN Upper('Première validation BSC')
# MAGIC WHEN (FACT_VALIDATION.VALIDATIONSTATEID=2 AND ( FACT_VALIDATION.TICKETID ) IS NOT NULL) THEN Upper('Correspondance BSC')
# MAGIC ELSE 'INCONNU'
# MAGIC END, 
# MAGIC   case when (VEHICLETYPE.DESCRIPTION='TRAMWAY') then 2 --'Tramway' 
# MAGIC       WHEN (VEHICLETYPE.DESCRIPTION='URBANBUS') then 1 --'Bus'
# MAGIC       WHEN (VEHICLETYPE.DESCRIPTION='NAVETTE FLUVIALE') then 3 --'Bat3'
# MAGIC       else VEHICLETYPE.ID end

# COMMAND ----------

# MAGIC %sql
# MAGIC --CREATE DATABASE BI;
# MAGIC 
# MAGIC DROP TABLE IF EXISTS BI.validation;
# MAGIC create or replace table BI.validation
# MAGIC using delta
# MAGIC location '/mnt/standard/BI/validation'
# MAGIC as
# MAGIC SELECT
# MAGIC  CAST(FACT_VALIDATION.VALIDATIONDATE as date) as date,
# MAGIC  FACT_VALIDATION.VALIDATIONDATEID AS validationdateid,
# MAGIC case when ( case when FACT_VALIDATION.PRODUCTID is null and FACT_VALIDATION.VALIDATIONSTATUSID=2 then 1 else 0 end )=1 then 'EXTERNE' else rtrim(PRODUCT.CODE) end as code_produit,
# MAGIC table_produit.Nom_produits_voyages_comptable as libelle_produit,
# MAGIC  CASE WHEN (CASE WHEN FACT_VALIDATION.LINEID=9998 THEN '9998' ELSE LINE.CODE END)='A' then '59'
# MAGIC   WHEN (CASE WHEN FACT_VALIDATION.LINEID=9998 THEN '9998' ELSE LINE.CODE END)='B' then '60'
# MAGIC  WHEN (CASE WHEN FACT_VALIDATION.LINEID=9998 THEN '9998' ELSE LINE.CODE END)='C' then '61'
# MAGIC   WHEN (CASE WHEN FACT_VALIDATION.LINEID=9998 THEN '9998' ELSE LINE.CODE END)='D' then '62'
# MAGIC  else 
# MAGIC   CASE WHEN FACT_VALIDATION.LINEID=9998 THEN '9998' ELSE LINE.CODE END
# MAGIC   end as code_ligne,
# MAGIC     CASE WHEN FACT_VALIDATION.LINEID=9998 THEN 'DELOCALIZED' ELSE COALESCE(LINE.DESCRIPTION,'LIGNE INCONNU') END as description_ligne,
# MAGIC     case when (VEHICLETYPE.DESCRIPTION='TRAMWAY') then 2 --'Tramway' 
# MAGIC       WHEN (VEHICLETYPE.DESCRIPTION='URBANBUS') then 1 --'Bus'
# MAGIC       WHEN (VEHICLETYPE.DESCRIPTION='NAVETTE FLUVIALE') then 3 --'Bus'
# MAGIC       else VEHICLETYPE.ID end
# MAGIC       as code_mode,
# MAGIC   count(FACT_VALIDATION.VALIDATIONID) as nbre_validation
# MAGIC FROM
# MAGIC   FACT_VALIDATION 
# MAGIC    LEFT OUTER JOIN DIM_PRODUCT ON (FACT_VALIDATION.FAREPRODUCTITEMID=DIM_PRODUCT.FAREPRODUCTITEMID)
# MAGIC    LEFT OUTER JOIN PRODUCT ON (FACT_VALIDATION.PRODUCTID=PRODUCT.PRODUCTID)
# MAGIC    LEFT OUTER JOIN LINE ON (FACT_VALIDATION.LINEID=LINE.LINEID)
# MAGIC    LEFT OUTER JOIN DEVICE ON (FACT_VALIDATION.DEVICEID=DEVICE.DEVICEID)
# MAGIC    LEFT OUTER JOIN DEVICETYPE ON (DEVICE.DEVICETYPEID=DEVICETYPE.DEVICETYPEID)
# MAGIC    LEFT OUTER JOIN VALIDATIONSTATUS ON (FACT_VALIDATION.VALIDATIONSTATUSID=VALIDATIONSTATUS.VALIDATIONSTATUSID)
# MAGIC    LEFT OUTER JOIN VEHICLE ON (FACT_VALIDATION.VEHICLEID=VEHICLE.VEHICLEID)
# MAGIC    LEFT OUTER JOIN VEHICLETYPE ON (VEHICLETYPE.ID=VEHICLE.VEHICLETYPEID)
# MAGIC    LEFT OUTER JOIN table_produit ON (table_produit.Code_produit = PRODUCT.CODE)
# MAGIC 
# MAGIC WHERE
# MAGIC DEVICETYPE.DESCRIPTION  IN  ( 'MOBILE TICKETING','VAL'  )
# MAGIC and
# MAGIC VALIDATIONSTATUS.CODE='OK'
# MAGIC 
# MAGIC --cast(FACT_VALIDATION.VALIDATIONDATE as date)>='2022-02-01'
# MAGIC GROUP BY
# MAGIC  CAST(FACT_VALIDATION.VALIDATIONDATE as date),
# MAGIC  FACT_VALIDATION.VALIDATIONDATEID,
# MAGIC  case when ( case when FACT_VALIDATION.PRODUCTID is null and FACT_VALIDATION.VALIDATIONSTATUSID=2 then 1 else 0 end )=1 then 'EXTERNE' else rtrim(PRODUCT.CODE) end ,
# MAGIC  table_produit.Nom_produits_voyages_comptable,
# MAGIC  CASE WHEN (CASE WHEN FACT_VALIDATION.LINEID=9998 THEN '9998' ELSE LINE.CODE END)='A' then '59'
# MAGIC   WHEN (CASE WHEN FACT_VALIDATION.LINEID=9998 THEN '9998' ELSE LINE.CODE END)='B' then '60'
# MAGIC    WHEN (CASE WHEN FACT_VALIDATION.LINEID=9998 THEN '9998' ELSE LINE.CODE END)='C' then '61'
# MAGIC    WHEN (CASE WHEN FACT_VALIDATION.LINEID=9998 THEN '9998' ELSE LINE.CODE END)='D' then '62'
# MAGIC   else 
# MAGIC  CASE WHEN FACT_VALIDATION.LINEID=9998 THEN '9998' ELSE LINE.CODE END
# MAGIC   end,
# MAGIC    CASE WHEN FACT_VALIDATION.LINEID=9998 THEN 'DELOCALIZED' ELSE COALESCE(LINE.DESCRIPTION,'LIGNE INCONNU') END ,
# MAGIC     case when (VEHICLETYPE.DESCRIPTION='TRAMWAY') then 2 --'Tramway' 
# MAGIC       WHEN (VEHICLETYPE.DESCRIPTION='URBANBUS') then 1 --'Bus'
# MAGIC       WHEN (VEHICLETYPE.DESCRIPTION='NAVETTE FLUVIALE') then 3 --'Bus'
# MAGIC       else VEHICLETYPE.ID end
