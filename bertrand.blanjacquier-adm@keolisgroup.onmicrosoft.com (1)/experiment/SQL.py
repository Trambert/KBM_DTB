# Databricks notebook source
# MAGIC %sql
# MAGIC select count(*)
# MAGIC from titan_recette.reglement r
# MAGIC where r.Date_modif_enreg = r.Date_creation_enreg
# MAGIC and r.Date_modif_enreg >= '2022-01-01'
# MAGIC and r.Date_modif_enreg is not null

# COMMAND ----------

# MAGIC %sql
# MAGIC 
# MAGIC select count(*), r.Date_creation_enreg
# MAGIC from titan_recette.ventes r
# MAGIC where r.Date_creation_enreg >= '2021-01-01'
# MAGIC group by r.Date_creation_enreg
# MAGIC order by r.Date_creation_enreg desc

# COMMAND ----------

# MAGIC %sql
# MAGIC 
# MAGIC -- select 
# MAGIC -- cast(
# MAGIC --  EXTRACT( DAY    FROM HEURE_DEPART_APPLI_ARRET_SEUIL ) * 86400
# MAGIC --      + EXTRACT( HOUR   FROM HEURE_DEPART_APPLI_ARRET_SEUIL ) *  3600
# MAGIC --      + EXTRACT( MINUTE FROM HEURE_DEPART_APPLI_ARRET_SEUIL ) *    60
# MAGIC --      + EXTRACT( SECOND FROM HEURE_DEPART_APPLI_ARRET_SEUIL ) as double) as SecondHEURE_DEPART_APPLI_ARRET_SEUIL,
# MAGIC --  cast(
# MAGIC --  EXTRACT( DAY    FROM diff_HEURE_DEPART_REELLE_ARRET ) * 86400
# MAGIC --      + EXTRACT( HOUR   FROM diff_HEURE_DEPART_REELLE_ARRET ) *  3600
# MAGIC --      + EXTRACT( MINUTE FROM diff_HEURE_DEPART_REELLE_ARRET ) *    60
# MAGIC --      + EXTRACT( SECOND FROM diff_HEURE_DEPART_REELLE_ARRET ) as double) as Seconddiff_HEURE_DEPART_REELLE_ARRET  
# MAGIC -- from 
# MAGIC -- (
# MAGIC 
# MAGIC 
# MAGIC 
# MAGIC -- select 
# MAGIC -- DATE_EXPLOITATION,
# MAGIC -- MNEMO_LIGNE,
# MAGIC -- sum(case when 
# MAGIC -- SECOND_HEURE_DEPART_APPLI_ARRET_SEUIL >= diff_SECOND_HEURE_DEPART_REELLE_ARRET then 1 else 0 end)  as DataCorrectes, 
# MAGIC 
# MAGIC -- sum(CASE WHEN 
# MAGIC -- diff_SECOND_HEURE_DEPART_APPLI_ARRET IS null then 0 else 1 end) as NbData
# MAGIC 
# MAGIC -- from (
# MAGIC 
# MAGIC 
# MAGIC 
# MAGIC SELECT
# MAGIC   REF_COURSE.REFCO_DATE_EXPLOIT as DATE_EXPLOITATION,
# MAGIC   REF_COURSE.REFCO_MNEMO_LG AS MNEMO_LIGNE,
# MAGIC   REF_COURSE.REFCO_NO_CH_THEO AS NO_CHAINAGE_THEO,
# MAGIC   decode(REF_COURSE.REFCO_SENS_THEO,'A','Aller','R','Retour','') as SENS_THEO,
# MAGIC   POINT.REFPT_MNEMO_LONG AS MNEMO_ARRET,
# MAGIC   REC_ARRET.RECAR_HRE_DEP_THEO as HEURE_DEPART_APPLI_ARRET, 
# MAGIC   unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO) as SECOND_HEURE_DEPART_APPLI_ARRET, 
# MAGIC   unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO)+cast(REC_ARRET.RECAR_ECART_DEP as int) as SECOND_HEURE_DEPART_REELLE_ARRET_V2,
# MAGIC --   REC_ARRET.RECAR_ECART_DEP as test,
# MAGIC --   make_interval(0, 0, 0, 0, 0, 0,  REC_ARRET.RECAR_ECART_DEP) as test2,
# MAGIC to_timestamp(unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO)+REC_ARRET.RECAR_ECART_DEP) as HEURE_DEPART_REELLE_ARRET,
# MAGIC --   lag(REC_ARRET.RECAR_HRE_DEP_THEO,+1)  OVER (PARTITION BY REF_COURSE.REFCO_DATE_EXPLOIT,REF_COURSE.REFCO_MNEMO_LG,POINT.REFPT_MNEMO_LONG  ORDER BY REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC --     REF_COURSE.REFCO_MNEMO_LG ,
# MAGIC --     REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC --     decode(REF_COURSE.REFCO_SENS_THEO,'A','Aller','R','Retour',''),
# MAGIC --     POINT.REFPT_MNEMO_LONG,
# MAGIC --     REC_ARRET.RECAR_HRE_DEP_THEO) as lag_HEURE_DEPART_APPLI_ARRET,
# MAGIC    lag(unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO),+1)  OVER (PARTITION BY REF_COURSE.REFCO_DATE_EXPLOIT,REF_COURSE.REFCO_MNEMO_LG,REF_COURSE.REFCO_NO_CH_THEO,REF_COURSE.REFCO_SENS_THEO,REF_COURSE.REFCO_NO_CH_THEO,POINT.REFPT_MNEMO_LONG  ORDER BY REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC     REF_COURSE.REFCO_MNEMO_LG ,
# MAGIC     REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC     decode(REF_COURSE.REFCO_SENS_THEO,'A','Aller','R','Retour',''),
# MAGIC     POINT.REFPT_MNEMO_LONG,
# MAGIC     unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO)+REC_ARRET.RECAR_ECART_DEP) as lag_SECOND_HEURE_DEPART_APPLI_ARRET,
# MAGIC --     lag((to_timestamp(REC_ARRET.RECAR_HRE_DEP_THEO, 'yyyy-MM-dd hh:mm:ss'))+ make_interval(0, 0, 0, 0, 0, 0,  REC_ARRET.RECAR_ECART_DEP),+1)  OVER (PARTITION BY REF_COURSE.REFCO_DATE_EXPLOIT,REF_COURSE.REFCO_MNEMO_LG,POINT.REFPT_MNEMO_LONG  ORDER BY REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC --     REF_COURSE.REFCO_MNEMO_LG ,
# MAGIC --     REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC --     decode(REF_COURSE.REFCO_SENS_THEO,'A','Aller','R','Retour',''),
# MAGIC --     POINT.REFPT_MNEMO_LONG,
# MAGIC --     REC_ARRET.RECAR_HRE_DEP_THEO) as lag_HEURE_DEPART_REELLE_ARRET,
# MAGIC     lag(  unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO)+REC_ARRET.RECAR_ECART_DEP  ,+1)  OVER (PARTITION BY REF_COURSE.REFCO_DATE_EXPLOIT,REF_COURSE.REFCO_MNEMO_LG,REF_COURSE.REFCO_NO_CH_THEO,REF_COURSE.REFCO_SENS_THEO,REF_COURSE.REFCO_NO_CH_THEO,POINT.REFPT_MNEMO_LONG  ORDER BY REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC     REF_COURSE.REFCO_MNEMO_LG ,
# MAGIC     REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC     decode(REF_COURSE.REFCO_SENS_THEO,'A','Aller','R','Retour',''),
# MAGIC     POINT.REFPT_MNEMO_LONG,
# MAGIC     unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO)+REC_ARRET.RECAR_ECART_DEP) as lag_SECOND_HEURE_DEPART_REELLE_ARRET,
# MAGIC     
# MAGIC --     (REC_ARRET.RECAR_HRE_DEP_THEO- lag(REC_ARRET.RECAR_HRE_DEP_THEO,+1)  OVER (PARTITION BY REF_COURSE.REFCO_DATE_EXPLOIT,REF_COURSE.REFCO_MNEMO_LG,POINT.REFPT_MNEMO_LONG  ORDER BY REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC --     REF_COURSE.REFCO_MNEMO_LG ,
# MAGIC --     REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC --     decode(REF_COURSE.REFCO_SENS_THEO,'A','Aller','R','Retour',''),
# MAGIC --     POINT.REFPT_MNEMO_LONG,
# MAGIC --     REC_ARRET.RECAR_HRE_DEP_THEO)) as diff_HEURE_DEPART_APPLI_ARRET,
# MAGIC     
# MAGIC     unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO)- lag(unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO),+1)  OVER (PARTITION BY REF_COURSE.REFCO_DATE_EXPLOIT,REF_COURSE.REFCO_MNEMO_LG,REF_COURSE.REFCO_NO_CH_THEO,REF_COURSE.REFCO_SENS_THEO,REF_COURSE.REFCO_NO_CH_THEO,POINT.REFPT_MNEMO_LONG ORDER BY REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC     REF_COURSE.REFCO_MNEMO_LG ,
# MAGIC     REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC     decode(REF_COURSE.REFCO_SENS_THEO,'A','Aller','R','Retour',''),
# MAGIC     POINT.REFPT_MNEMO_LONG,
# MAGIC     unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO)+REC_ARRET.RECAR_ECART_DEP) as diff_SECOND_HEURE_DEPART_APPLI_ARRET,
# MAGIC     
# MAGIC     
# MAGIC --     (to_timestamp(REC_ARRET.RECAR_HRE_DEP_THEO, 'yyyy-MM-dd hh:mm:ss'))+ make_interval(0, 0, 0, 0, 0, 0,  REC_ARRET.RECAR_ECART_DEP) -lag((to_timestamp(REC_ARRET.RECAR_HRE_DEP_THEO, 'yyyy-MM-dd hh:mm:ss'))+ make_interval(0, 0, 0, 0, 0, 0,  REC_ARRET.RECAR_ECART_DEP),+1)  OVER (PARTITION BY REF_COURSE.REFCO_DATE_EXPLOIT,REF_COURSE.REFCO_MNEMO_LG,POINT.REFPT_MNEMO_LONG  ORDER BY REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC --     REF_COURSE.REFCO_MNEMO_LG ,
# MAGIC --     REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC --     decode(REF_COURSE.REFCO_SENS_THEO,'A','Aller','R','Retour',''),
# MAGIC --     POINT.REFPT_MNEMO_LONG,
# MAGIC --     REC_ARRET.RECAR_HRE_DEP_THEO) as diff_HEURE_DEPART_REELLE_ARRET, 
# MAGIC     
# MAGIC     unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO)+REC_ARRET.RECAR_ECART_DEP -lag(  unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO)+REC_ARRET.RECAR_ECART_DEP  ,+1)  OVER (PARTITION BY REF_COURSE.REFCO_DATE_EXPLOIT,REF_COURSE.REFCO_MNEMO_LG,REF_COURSE.REFCO_NO_CH_THEO,REF_COURSE.REFCO_SENS_THEO,REF_COURSE.REFCO_NO_CH_THEO,POINT.REFPT_MNEMO_LONG ORDER BY REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC     REF_COURSE.REFCO_MNEMO_LG ,
# MAGIC     REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC     decode(REF_COURSE.REFCO_SENS_THEO,'A','Aller','R','Retour',''),
# MAGIC     POINT.REFPT_MNEMO_LONG,
# MAGIC     unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO)+REC_ARRET.RECAR_ECART_DEP) as diff_SECOND_HEURE_DEPART_REELLE_ARRET,
# MAGIC     
# MAGIC     
# MAGIC  (unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO)- unix_seconds(lag(REC_ARRET.RECAR_HRE_DEP_THEO,+1)  OVER (PARTITION BY REF_COURSE.REFCO_DATE_EXPLOIT,REF_COURSE.REFCO_MNEMO_LG,REF_COURSE.REFCO_NO_CH_THEO,REF_COURSE.REFCO_SENS_THEO,REF_COURSE.REFCO_NO_CH_THEO,POINT.REFPT_MNEMO_LONG  ORDER BY REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC     REF_COURSE.REFCO_MNEMO_LG ,
# MAGIC     REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC     decode(REF_COURSE.REFCO_SENS_THEO,'A','Aller','R','Retour',''),
# MAGIC     POINT.REFPT_MNEMO_LONG,
# MAGIC     unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO)+REC_ARRET.RECAR_ECART_DEP))) + 179 as SECOND_HEURE_DEPART_APPLI_ARRET_SEUIL
# MAGIC 
# MAGIC 
# MAGIC     
# MAGIC     
# MAGIC  --(REC_ARRET.RECAR_HRE_DEP_THEO+(REC_ARRET.RECAR_ECART_DEP/86400))
# MAGIC FROM
# MAGIC   REC_ARRET,
# MAGIC   REF_COURSE,
# MAGIC   RECCO_COM,
# MAGIC   REC_CALENDRIER,
# MAGIC   REF_POINT  POINT,
# MAGIC   TRANCHE_HORAIRE,
# MAGIC   LIEN_TRANCHE_SEGMENT,
# MAGIC   SEGMENT_HORAIRE,
# MAGIC   LIEN_SEGMENT_PLAGE,
# MAGIC   PLAGE_HORAIRE
# MAGIC WHERE
# MAGIC    REF_COURSE.REFCO_MNEMO_LG  IN  ( '01'  )
# MAGIC    and 
# MAGIC    TRANCHE_HORAIRE.TRHOR_MNEMO  IN  ( 'IQ_F10F'  )
# MAGIC    AND
# MAGIC    decode(REC_ARRET.RECAR_TYPE_PT,'Y','Oui','N','Non','')  IN  ( 'Oui'  )
# MAGIC    AND
# MAGIC    ( REF_COURSE.REFCO_TYPE_THEO=0  )
# MAGIC    AND
# MAGIC    decode(REF_COURSE.REFCO_FLAG_GRAPH,'0','Non','1','Oui','Oui')  =  'Oui'
# MAGIC    AND
# MAGIC    DECODE(RECCO_COM.RECCOM_FLAG_OK,'Y','Complète','E','Incomplète','N','Invalidée par l''utilisateur','D','Déviée et non relocalisée',RECCO_COM.RECCOM_FLAG_OK)  =  'Complète'
# MAGIC    AND
# MAGIC    RECCO_COM.RECCOM_FLAG_OK  =  'Y'
# MAGIC    AND
# MAGIC    Decode(REC_ARRET.RECAR_FLAG_DEVIA,'Y','Oui','Non')  =  'Non'
# MAGIC    AND
# MAGIC    decode(REF_COURSE.REFCO_FLAG_REAL_THEO,'1','Oui','Non')  IN  ( 'Oui'  )
# MAGIC --    AND
# MAGIC --    (   
# MAGIC --    (POINT.REFPT_MNEMO_LONG NOT in ('GSJEAN','AEROGA','AER01A') and  decode(REF_COURSE.REFCO_SENS_THEO,'A','Aller','R','Retour','')='Aller')
# MAGIC --    OR
# MAGIC --    (POINT.REFPT_MNEMO_LONG NOT in ('GSJEAN','STJ09R') and  decode(REF_COURSE.REFCO_SENS_THEO,'A','Aller','R','Retour','')='Retour')
# MAGIC --    )
# MAGIC 
# MAGIC and
# MAGIC   ( REF_COURSE.REFCO_ID=REC_ARRET.RECAR_ID  )
# MAGIC   AND  ( REF_COURSE.REFCO_DATE_EXPLOIT=REC_CALENDRIER.CAL_DATE_EXPLOIT  )
# MAGIC   AND  ( REF_COURSE.REFCO_ID=RECCO_COM.RECCOM_ID  )
# MAGIC   AND  ( TRANCHE_HORAIRE.TRHOR_MNEMO=LIEN_TRANCHE_SEGMENT.TRSEG_MNEMO_TR  )
# MAGIC   AND  ( LIEN_TRANCHE_SEGMENT.TRSEG_MNEMO_SEG=SEGMENT_HORAIRE.SEGHOR_MNEMO  )
# MAGIC   AND  ( LIEN_SEGMENT_PLAGE.SEGPL_MNEMO_SEG=SEGMENT_HORAIRE.SEGHOR_MNEMO  )
# MAGIC   AND  ( PLAGE_HORAIRE.PLHOR_MNEMO=LIEN_SEGMENT_PLAGE.SEGPL_MNEMO_PL  )
# MAGIC   AND  ( REF_COURSE.REFCO_HRE_DEP_THEO between PLAGE_HORAIRE.PLHOR_HREDEB and PLAGE_HORAIRE.PLHOR_HREFIN
# MAGIC   )
# MAGIC   AND  ( REF_COURSE.REFCO_HRE_DEP_THEO between PLAGE_HORAIRE.PLHOR_HREDEB and PLAGE_HORAIRE.PLHOR_HREFIN  )
# MAGIC   AND  ( REC_ARRET.RECAR_REFPT_ID=POINT.REFPT_ID  )
# MAGIC   AND  
# MAGIC   REC_CALENDRIER.CAL_DATE_EXPLOIT='2022-02-11T00:00:00.000+0000'
# MAGIC   
# MAGIC   order by 
# MAGIC     REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC     REF_COURSE.REFCO_MNEMO_LG ,
# MAGIC     REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC     decode(REF_COURSE.REFCO_SENS_THEO,'A','Aller','R','Retour',''),
# MAGIC     POINT.REFPT_MNEMO_LONG,
# MAGIC     unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO)+REC_ARRET.RECAR_ECART_DEP
# MAGIC --   )
# MAGIC -- GROUP BY
# MAGIC -- DATE_EXPLOITATION,
# MAGIC -- MNEMO_LIGNE
# MAGIC -- limit 2000
# MAGIC --1029 / 1218

# COMMAND ----------

# MAGIC %sql
# MAGIC --Ponctualite bus
# MAGIC select DATE_EXPLOITATION,MNEMO_LIGNE,NO_CHAINAGE_THEO,SENS_THEO,MNEMO_ARRET,HEURE_DEPART_APPLI_ARRET,test,test2,HEURE_DEPART_REELLE_ARRET,lag_HEURE_DEPART_APPLI_ARRET,lag_HEURE_DEPART_REELLE_ARRET,diff_HEURE_DEPART_APPLI_ARRET,diff_HEURE_DEPART_REELLE_ARRET,HEURE_DEPART_APPLI_ARRET_SEUIL, extract(SECONDS FROM diff_HEURE_DEPART_REELLE_ARRET)
# MAGIC from (
# MAGIC SELECT
# MAGIC   REF_COURSE.REFCO_DATE_EXPLOIT as DATE_EXPLOITATION,
# MAGIC   REF_COURSE.REFCO_MNEMO_LG AS MNEMO_LIGNE,
# MAGIC   REF_COURSE.REFCO_NO_CH_THEO AS NO_CHAINAGE_THEO,
# MAGIC   decode(
# MAGIC     REF_COURSE.REFCO_SENS_THEO,
# MAGIC     'A',
# MAGIC     'Aller',
# MAGIC     'R',
# MAGIC     'Retour',
# MAGIC     ''
# MAGIC   ) as SENS_THEO,
# MAGIC   POINT.REFPT_MNEMO_LONG AS MNEMO_ARRET,
# MAGIC   REC_ARRET.RECAR_HRE_DEP_THEO as HEURE_DEPART_APPLI_ARRET,
# MAGIC   REC_ARRET.RECAR_ECART_DEP as test,
# MAGIC   make_interval(0, 0, 0, 0, 0, 0, REC_ARRET.RECAR_ECART_DEP) as test2,
# MAGIC   (
# MAGIC     to_timestamp(
# MAGIC       REC_ARRET.RECAR_HRE_DEP_THEO,
# MAGIC       'yyyy-MM-dd hh:mm:ss'
# MAGIC     )
# MAGIC   ) + make_interval(0, 0, 0, 0, 0, 0, REC_ARRET.RECAR_ECART_DEP) as HEURE_DEPART_REELLE_ARRET,
# MAGIC   lag(REC_ARRET.RECAR_HRE_DEP_THEO, + 1) OVER (
# MAGIC     PARTITION BY REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC     REF_COURSE.REFCO_MNEMO_LG,
# MAGIC     POINT.REFPT_MNEMO_LONG
# MAGIC     ORDER BY
# MAGIC       REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC       REF_COURSE.REFCO_MNEMO_LG,
# MAGIC       REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC       decode(
# MAGIC         REF_COURSE.REFCO_SENS_THEO,
# MAGIC         'A',
# MAGIC         'Aller',
# MAGIC         'R',
# MAGIC         'Retour',
# MAGIC         ''
# MAGIC       ),
# MAGIC       POINT.REFPT_MNEMO_LONG,
# MAGIC       REC_ARRET.RECAR_HRE_DEP_THEO
# MAGIC   ) as lag_HEURE_DEPART_APPLI_ARRET,
# MAGIC   lag(
# MAGIC     (
# MAGIC       to_timestamp(
# MAGIC         REC_ARRET.RECAR_HRE_DEP_THEO,
# MAGIC         'yyyy-MM-dd hh:mm:ss'
# MAGIC       )
# MAGIC     ) + make_interval(0, 0, 0, 0, 0, 0, REC_ARRET.RECAR_ECART_DEP),
# MAGIC     + 1
# MAGIC   ) OVER (
# MAGIC     PARTITION BY REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC     REF_COURSE.REFCO_MNEMO_LG,
# MAGIC     POINT.REFPT_MNEMO_LONG
# MAGIC     ORDER BY
# MAGIC       REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC       REF_COURSE.REFCO_MNEMO_LG,
# MAGIC       REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC       decode(
# MAGIC         REF_COURSE.REFCO_SENS_THEO,
# MAGIC         'A',
# MAGIC         'Aller',
# MAGIC         'R',
# MAGIC         'Retour',
# MAGIC         ''
# MAGIC       ),
# MAGIC       POINT.REFPT_MNEMO_LONG,
# MAGIC       REC_ARRET.RECAR_HRE_DEP_THEO
# MAGIC   ) as lag_HEURE_DEPART_REELLE_ARRET,
# MAGIC   (
# MAGIC     REC_ARRET.RECAR_HRE_DEP_THEO - lag(REC_ARRET.RECAR_HRE_DEP_THEO, + 1) OVER (
# MAGIC       PARTITION BY REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC       REF_COURSE.REFCO_MNEMO_LG,
# MAGIC       POINT.REFPT_MNEMO_LONG
# MAGIC       ORDER BY
# MAGIC         REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC         REF_COURSE.REFCO_MNEMO_LG,
# MAGIC         REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC         decode(
# MAGIC           REF_COURSE.REFCO_SENS_THEO,
# MAGIC           'A',
# MAGIC           'Aller',
# MAGIC           'R',
# MAGIC           'Retour',
# MAGIC           ''
# MAGIC         ),
# MAGIC         POINT.REFPT_MNEMO_LONG,
# MAGIC         REC_ARRET.RECAR_HRE_DEP_THEO
# MAGIC     )
# MAGIC   ) as diff_HEURE_DEPART_APPLI_ARRET,
# MAGIC   (
# MAGIC     to_timestamp(
# MAGIC       REC_ARRET.RECAR_HRE_DEP_THEO,
# MAGIC       'yyyy-MM-dd hh:mm:ss'
# MAGIC     )
# MAGIC   ) + make_interval(0, 0, 0, 0, 0, 0, REC_ARRET.RECAR_ECART_DEP) - lag(
# MAGIC     (
# MAGIC       to_timestamp(
# MAGIC         REC_ARRET.RECAR_HRE_DEP_THEO,
# MAGIC         'yyyy-MM-dd hh:mm:ss'
# MAGIC       )
# MAGIC     ) + make_interval(0, 0, 0, 0, 0, 0, REC_ARRET.RECAR_ECART_DEP),
# MAGIC     + 1
# MAGIC   ) OVER (
# MAGIC     PARTITION BY REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC     REF_COURSE.REFCO_MNEMO_LG,
# MAGIC     POINT.REFPT_MNEMO_LONG
# MAGIC     ORDER BY
# MAGIC       REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC       REF_COURSE.REFCO_MNEMO_LG,
# MAGIC       REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC       decode(
# MAGIC         REF_COURSE.REFCO_SENS_THEO,
# MAGIC         'A',
# MAGIC         'Aller',
# MAGIC         'R',
# MAGIC         'Retour',
# MAGIC         ''
# MAGIC       ),
# MAGIC       POINT.REFPT_MNEMO_LONG,
# MAGIC       REC_ARRET.RECAR_HRE_DEP_THEO
# MAGIC   ) as diff_HEURE_DEPART_REELLE_ARRET,
# MAGIC   (
# MAGIC     (
# MAGIC       REC_ARRET.RECAR_HRE_DEP_THEO - lag(REC_ARRET.RECAR_HRE_DEP_THEO, + 1) OVER (
# MAGIC         PARTITION BY REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC         REF_COURSE.REFCO_MNEMO_LG,
# MAGIC         POINT.REFPT_MNEMO_LONG
# MAGIC         ORDER BY
# MAGIC           REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC           REF_COURSE.REFCO_MNEMO_LG,
# MAGIC           REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC           decode(
# MAGIC             REF_COURSE.REFCO_SENS_THEO,
# MAGIC             'A',
# MAGIC             'Aller',
# MAGIC             'R',
# MAGIC             'Retour',
# MAGIC             ''
# MAGIC           ),
# MAGIC           POINT.REFPT_MNEMO_LONG,
# MAGIC           REC_ARRET.RECAR_HRE_DEP_THEO
# MAGIC       )
# MAGIC     ) + make_interval(0, 0, 0, 0, 0, 0, 179)
# MAGIC   ) as HEURE_DEPART_APPLI_ARRET_SEUIL --(REC_ARRET.RECAR_HRE_DEP_THEO+(REC_ARRET.RECAR_ECART_DEP/86400))
# MAGIC FROM
# MAGIC   REC_ARRET,
# MAGIC   REF_COURSE,
# MAGIC   RECCO_COM,
# MAGIC   REC_CALENDRIER,
# MAGIC   REF_POINT POINT,
# MAGIC   TRANCHE_HORAIRE,
# MAGIC   LIEN_TRANCHE_SEGMENT,
# MAGIC   SEGMENT_HORAIRE,
# MAGIC   LIEN_SEGMENT_PLAGE,
# MAGIC   PLAGE_HORAIRE
# MAGIC WHERE
# MAGIC   REF_COURSE.REFCO_MNEMO_LG IN ('01')
# MAGIC   and TRANCHE_HORAIRE.TRHOR_MNEMO IN ('IQ_F10F')
# MAGIC   AND decode(REC_ARRET.RECAR_TYPE_PT, 'Y', 'Oui', 'N', 'Non', '') IN ('Oui')
# MAGIC   AND (REF_COURSE.REFCO_TYPE_THEO = 0)
# MAGIC   AND decode(
# MAGIC     REF_COURSE.REFCO_FLAG_GRAPH,
# MAGIC     '0',
# MAGIC     'Non',
# MAGIC     '1',
# MAGIC     'Oui',
# MAGIC     'Oui'
# MAGIC   ) = 'Oui'
# MAGIC   AND DECODE(
# MAGIC     RECCO_COM.RECCOM_FLAG_OK,
# MAGIC     'Y',
# MAGIC     'Complète',
# MAGIC     'E',
# MAGIC     'Incomplète',
# MAGIC     'N',
# MAGIC     'Invalidée par l''utilisateur',
# MAGIC     'D',
# MAGIC     'Déviée et non relocalisée',
# MAGIC     RECCO_COM.RECCOM_FLAG_OK
# MAGIC   ) = 'Complète'
# MAGIC   AND RECCO_COM.RECCOM_FLAG_OK = 'Y'
# MAGIC   AND Decode(REC_ARRET.RECAR_FLAG_DEVIA, 'Y', 'Oui', 'Non') = 'Non'
# MAGIC   AND decode(REF_COURSE.REFCO_FLAG_REAL_THEO, '1', 'Oui', 'Non') IN ('Oui')
# MAGIC   and (REF_COURSE.REFCO_ID = REC_ARRET.RECAR_ID)
# MAGIC   AND (
# MAGIC     REF_COURSE.REFCO_DATE_EXPLOIT = REC_CALENDRIER.CAL_DATE_EXPLOIT
# MAGIC   )
# MAGIC   AND (REF_COURSE.REFCO_ID = RECCO_COM.RECCOM_ID)
# MAGIC   AND (
# MAGIC     TRANCHE_HORAIRE.TRHOR_MNEMO = LIEN_TRANCHE_SEGMENT.TRSEG_MNEMO_TR
# MAGIC   )
# MAGIC   AND (
# MAGIC     LIEN_TRANCHE_SEGMENT.TRSEG_MNEMO_SEG = SEGMENT_HORAIRE.SEGHOR_MNEMO
# MAGIC   )
# MAGIC   AND (
# MAGIC     LIEN_SEGMENT_PLAGE.SEGPL_MNEMO_SEG = SEGMENT_HORAIRE.SEGHOR_MNEMO
# MAGIC   )
# MAGIC   AND (
# MAGIC     PLAGE_HORAIRE.PLHOR_MNEMO = LIEN_SEGMENT_PLAGE.SEGPL_MNEMO_PL
# MAGIC   )
# MAGIC   AND (
# MAGIC     REF_COURSE.REFCO_HRE_DEP_THEO between PLAGE_HORAIRE.PLHOR_HREDEB
# MAGIC     and PLAGE_HORAIRE.PLHOR_HREFIN
# MAGIC   )
# MAGIC   AND (
# MAGIC     REF_COURSE.REFCO_HRE_DEP_THEO between PLAGE_HORAIRE.PLHOR_HREDEB
# MAGIC     and PLAGE_HORAIRE.PLHOR_HREFIN
# MAGIC   )
# MAGIC   AND (REC_ARRET.RECAR_REFPT_ID = POINT.REFPT_ID)
# MAGIC   AND REC_CALENDRIER.CAL_DATE_EXPLOIT = '2022-02-11T00:00:00.000+0000'
# MAGIC order by
# MAGIC   REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC   REF_COURSE.REFCO_MNEMO_LG,
# MAGIC   REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC   decode(
# MAGIC     REF_COURSE.REFCO_SENS_THEO,
# MAGIC     'A',
# MAGIC     'Aller',
# MAGIC     'R',
# MAGIC     'Retour',
# MAGIC     ''
# MAGIC   ),
# MAGIC   POINT.REFPT_MNEMO_LONG,
# MAGIC   REC_ARRET.RECAR_HRE_DEP_THEO
# MAGIC   )
# MAGIC limit
# MAGIC   100

# COMMAND ----------

# MAGIC %sql --BUSFréquence
# MAGIC SELECT
# MAGIC   REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC   REF_COURSE.REFCO_MNEMO_LG,
# MAGIC   REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC   decode(
# MAGIC     REF_COURSE.REFCO_SENS_THEO,
# MAGIC     'A',
# MAGIC     'Aller',
# MAGIC     'R',
# MAGIC     'Retour',
# MAGIC     ''
# MAGIC   ),
# MAGIC   POINT.REFPT_MNEMO_LONG,
# MAGIC   REC_ARRET.RECAR_HRE_DEP_THEO,
# MAGIC   REC_ARRET.RECAR_ECART_DEP,
# MAGIC   lag(REC_ARRET.RECAR_HRE_DEP_THEO, + 1) OVER (
# MAGIC     PARTITION BY REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC     REF_COURSE.REFCO_MNEMO_LG,
# MAGIC     REF_COURSE.REFCO_NO_CH_THEO
# MAGIC     ORDER BY
# MAGIC       REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC       REF_COURSE.REFCO_MNEMO_LG,
# MAGIC       REF_COURSE.REFCO_NO_CH_THEO
# MAGIC   ),
# MAGIC   (
# MAGIC     unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO) + REC_ARRET.RECAR_ECART_DEP
# MAGIC   ),
# MAGIC   cast(
# MAGIC     (
# MAGIC       unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO) + REC_ARRET.RECAR_ECART_DEP
# MAGIC     ) as timestamp
# MAGIC   ),
# MAGIC   (
# MAGIC     (
# MAGIC       unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO) + REC_ARRET.RECAR_ECART_DEP
# MAGIC     ) / 86400
# MAGIC   )
# MAGIC FROM
# MAGIC   REC_ARRET,
# MAGIC   REF_COURSE,
# MAGIC   RECCO_COM,
# MAGIC   REC_CALENDRIER,
# MAGIC   REF_POINT POINT,
# MAGIC   TRANCHE_HORAIRE,
# MAGIC   LIEN_TRANCHE_SEGMENT,
# MAGIC   SEGMENT_HORAIRE,
# MAGIC   LIEN_SEGMENT_PLAGE,
# MAGIC   PLAGE_HORAIRE
# MAGIC WHERE
# MAGIC   (REF_COURSE.REFCO_ID = REC_ARRET.RECAR_ID)
# MAGIC   AND (
# MAGIC     REF_COURSE.REFCO_DATE_EXPLOIT = REC_CALENDRIER.CAL_DATE_EXPLOIT
# MAGIC   )
# MAGIC   AND (REF_COURSE.REFCO_ID = RECCO_COM.RECCOM_ID)
# MAGIC   AND (
# MAGIC     TRANCHE_HORAIRE.TRHOR_MNEMO = LIEN_TRANCHE_SEGMENT.TRSEG_MNEMO_TR
# MAGIC   )
# MAGIC   AND (
# MAGIC     LIEN_TRANCHE_SEGMENT.TRSEG_MNEMO_SEG = SEGMENT_HORAIRE.SEGHOR_MNEMO
# MAGIC   )
# MAGIC   AND (
# MAGIC     LIEN_SEGMENT_PLAGE.SEGPL_MNEMO_SEG = SEGMENT_HORAIRE.SEGHOR_MNEMO
# MAGIC   )
# MAGIC   AND (
# MAGIC     PLAGE_HORAIRE.PLHOR_MNEMO = LIEN_SEGMENT_PLAGE.SEGPL_MNEMO_PL
# MAGIC   )
# MAGIC   AND (
# MAGIC     REF_COURSE.REFCO_HRE_DEP_THEO between PLAGE_HORAIRE.PLHOR_HREDEB
# MAGIC     and PLAGE_HORAIRE.PLHOR_HREFIN
# MAGIC   )
# MAGIC   AND (REC_ARRET.RECAR_REFPT_ID = POINT.REFPT_ID)
# MAGIC   AND REC_CALENDRIER.CAL_DATE_EXPLOIT = '2022-02-11T00:00:00.000+0000'
# MAGIC   AND REF_COURSE.REFCO_MNEMO_LG IN ('01', '04', '09', '10', '15', '16', '05')
# MAGIC   AND TRANCHE_HORAIRE.TRHOR_MNEMO IN ('IQ_F10F')
# MAGIC   AND decode(
# MAGIC     REC_ARRET.RECAR_TYPE_PT,
# MAGIC     'Y',
# MAGIC     'Oui',
# MAGIC     'N',
# MAGIC     'Non',
# MAGIC     ''
# MAGIC   ) IN ('Oui')
# MAGIC   AND (REF_COURSE.REFCO_TYPE_THEO = 0)
# MAGIC   AND decode(
# MAGIC     REF_COURSE.REFCO_FLAG_GRAPH,
# MAGIC     '0',
# MAGIC     'Non',
# MAGIC     '1',
# MAGIC     'Oui',
# MAGIC     'Oui'
# MAGIC   ) = 'Oui'
# MAGIC   AND DECODE(
# MAGIC     RECCO_COM.RECCOM_FLAG_OK,
# MAGIC     'Y',
# MAGIC     'Complète',
# MAGIC     'E',
# MAGIC     'Incomplète',
# MAGIC     'N',
# MAGIC     'Invalidée par l''utilisateur',
# MAGIC     'D',
# MAGIC     'Déviée et non relocalisée',
# MAGIC     RECCO_COM.RECCOM_FLAG_OK
# MAGIC   ) = 'Complète'
# MAGIC   AND RECCO_COM.RECCOM_FLAG_OK = 'Y'
# MAGIC   AND Decode(REC_ARRET.RECAR_FLAG_DEVIA, 'Y', 'Oui', 'Non') = 'Non'
# MAGIC   AND decode(
# MAGIC     REF_COURSE.REFCO_FLAG_REAL_THEO,
# MAGIC     '1',
# MAGIC     'Oui',
# MAGIC     'Non'
# MAGIC   ) IN ('Oui')

# COMMAND ----------

# MAGIC %sql
# MAGIC --TRAM Ponctualite
# MAGIC SELECT
# MAGIC   REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC   REF_COURSE.REFCO_MNEMO_LG,
# MAGIC   REF_POINT.REFPT_MNEMO_LONG,
# MAGIC   PLAGE_HORAIRE.PLHOR_MNEMO,
# MAGIC   REC_ARRET.RECAR_HRE_ARR_THEO,
# MAGIC   --REC_ARRET.RECAR_HRE_ARR_THEO +(REC_ARRET.RECAR_ECART_DEP/86400 ),
# MAGIC   REC_ARRET.RECAR_ECART_DEP,
# MAGIC   (unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO) +REC_ARRET.RECAR_ECART_DEP),
# MAGIC   cast((unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO) +REC_ARRET.RECAR_ECART_DEP) as timestamp),
# MAGIC   REF_COURSE.REFCO_SENS_REC
# MAGIC FROM
# MAGIC   saetram.REC_ARRET,
# MAGIC   saetram.REF_COURSE,
# MAGIC   saetram.REC_CALENDRIER,
# MAGIC   saetram.REF_POINT,
# MAGIC   saetram.PLAGE_HORAIRE
# MAGIC WHERE
# MAGIC   ( REC_ARRET.RECAR_ID=REF_COURSE.REFCO_ID  )
# MAGIC   AND  ( REF_COURSE.REFCO_DATE_EXPLOIT=REC_CALENDRIER.CAL_DATE_EXPLOIT  )
# MAGIC   AND  ( REF_POINT.REFPT_ID=REC_ARRET.RECAR_REFPT_ID  )
# MAGIC   AND  ( REC_ARRET.RECAR_HRE_ARR_THEO between PLAGE_HORAIRE.PLHOR_HREDEB and PLAGE_HORAIRE.PLHOR_HREFIN  )
# MAGIC   AND  
# MAGIC   (
# MAGIC    REF_COURSE.REFCO_DATE_EXPLOIT ='2022-02-11T00:00:00.000+0000' 
# MAGIC    AND
# MAGIC    REF_COURSE.REFCO_TYPE_THEO  IN  ( 0  )
# MAGIC    AND
# MAGIC    PLAGE_HORAIRE.PLHOR_MNEMO  IN  ( '0345-6','23-27'  )
# MAGIC    AND
# MAGIC    (
# MAGIC     (
# MAGIC      REF_COURSE.REFCO_MNEMO_LG  IN  ( 'A'  )
# MAGIC      AND
# MAGIC      (
# MAGIC       (
# MAGIC        REF_COURSE.REFCO_SENS_REC  IN  ( 'A'  )
# MAGIC        AND
# MAGIC        REF_POINT.REFPT_MNEMO_LONG  IN  ( 'GARD V1','DRAVE V1','CENON_A','HDV_A_A','AUGUS_A'  )
# MAGIC       )
# MAGIC       OR
# MAGIC       (
# MAGIC        REF_COURSE.REFCO_SENS_REC  IN  ( 'R'  )
# MAGIC        AND
# MAGIC        REF_POINT.REFPT_MNEMO_LONG  IN  ( 'HAILL_V1','MERIG V2','HDV_A_R','CARNOT_R'  )
# MAGIC       )
# MAGIC      )
# MAGIC     )
# MAGIC     OR
# MAGIC     (
# MAGIC      REF_COURSE.REFCO_MNEMO_LG  IN  ( 'B'  )
# MAGIC      AND
# MAGIC      (
# MAGIC       (
# MAGIC        REF_COURSE.REFCO_SENS_REC  IN  ( 'A'  )
# MAGIC        AND
# MAGIC        REF_POINT.REFPT_MNEMO_LONG  IN  ( 'FRAALO_A','PESSA V1','MONTAI_A','HDV_B_A','CHART_A'  )
# MAGIC       )
# MAGIC       OR
# MAGIC       (
# MAGIC        REF_COURSE.REFCO_SENS_REC  IN  ( 'R'  )
# MAGIC        AND
# MAGIC        REF_POINT.REFPT_MNEMO_LONG  IN  ( 'GARON_V1','HANGAR_R','QUINCB_R','UNITEC_R'  )
# MAGIC       )
# MAGIC      )
# MAGIC     )
# MAGIC     OR
# MAGIC     (
# MAGIC      (
# MAGIC       (
# MAGIC        REF_COURSE.REFCO_SENS_REC  IN  ( 'A'  )
# MAGIC        AND
# MAGIC        REF_POINT.REFPT_MNEMO_LONG  IN  ( 'LYCVAC_A','CALAIS_A','VERNE_A','PUBLIC_A'  )
# MAGIC       )
# MAGIC       OR
# MAGIC       (
# MAGIC        REF_COURSE.REFCO_SENS_REC  IN  ( 'R'  )
# MAGIC        AND
# MAGIC        REF_POINT.REFPT_MNEMO_LONG  IN  ( 'PARCX_V2','CRACO_R','BQF_A','QUINCC_R','TERRE V2'  )
# MAGIC       )
# MAGIC      )
# MAGIC      AND
# MAGIC      REF_COURSE.REFCO_MNEMO_LG  IN  ( 'C'  )
# MAGIC     )
# MAGIC    )
# MAGIC   )

# COMMAND ----------

# MAGIC %sql --TRAM Frequence
# MAGIC SELECT
# MAGIC   REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC   REF_COURSE.REFCO_MNEMO_LG,
# MAGIC   REF_POINT.REFPT_MNEMO_LONG,
# MAGIC   REC_ARRET.RECAR_HRE_ARR_THEO,
# MAGIC   unix_seconds(REC_ARRET.RECAR_HRE_ARR_THEO),
# MAGIC   /*
# MAGIC   (
# MAGIC     to_number(to_char(REC_ARRET.RECAR_HRE_ARR_THEO, 'MI')) * 60
# MAGIC   ) +(
# MAGIC     to_number(to_char(REC_ARRET.RECAR_HRE_ARR_THEO, 'HH24')) * 3600
# MAGIC   ) +(
# MAGIC     to_number(to_char(REC_ARRET.RECAR_HRE_ARR_THEO, 'ss'))
# MAGIC   ),
# MAGIC   */
# MAGIC   unix_seconds(REC_ARRET.RECAR_HRE_ARR_THEO) +(REC_ARRET.RECAR_ECART_DEP ),
# MAGIC   cast((unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO) +REC_ARRET.RECAR_ECART_DEP) as timestamp),
# MAGIC   /*
# MAGIC   (
# MAGIC     to_number(
# MAGIC       to_char(
# MAGIC         (
# MAGIC           REC_ARRET.RECAR_HRE_ARR_THEO +(REC_ARRET.RECAR_ECART_DEP / 86400)
# MAGIC         ),
# MAGIC         'HH24'
# MAGIC       )
# MAGIC     ) * 3600
# MAGIC   ) +(
# MAGIC     to_number(
# MAGIC       to_char(
# MAGIC         (
# MAGIC           REC_ARRET.RECAR_HRE_ARR_THEO +(REC_ARRET.RECAR_ECART_DEP / 86400)
# MAGIC         ),
# MAGIC         'MI'
# MAGIC       )
# MAGIC     ) * 60
# MAGIC   ) +(
# MAGIC     to_number(
# MAGIC       to_char(
# MAGIC         (
# MAGIC           REC_ARRET.RECAR_HRE_ARR_THEO +(REC_ARRET.RECAR_ECART_DEP / 86400)
# MAGIC         ),
# MAGIC         'SS'
# MAGIC       )
# MAGIC     )
# MAGIC   ),
# MAGIC   */
# MAGIC   PLAGE_HORAIRE.PLHOR_MNEMO,
# MAGIC   REF_COURSE.REFCO_SENS_REC
# MAGIC FROM
# MAGIC   saetram.REC_ARRET,
# MAGIC   saetram.REF_COURSE,
# MAGIC   saetram.REC_CALENDRIER,
# MAGIC   saetram.REF_POINT,
# MAGIC   saetram.PLAGE_HORAIRE
# MAGIC WHERE
# MAGIC   (REC_ARRET.RECAR_ID = REF_COURSE.REFCO_ID)
# MAGIC   AND (
# MAGIC     REF_COURSE.REFCO_DATE_EXPLOIT = REC_CALENDRIER.CAL_DATE_EXPLOIT
# MAGIC   )
# MAGIC   AND (REF_POINT.REFPT_ID = REC_ARRET.RECAR_REFPT_ID)
# MAGIC   AND (
# MAGIC     REC_ARRET.RECAR_HRE_ARR_THEO between PLAGE_HORAIRE.PLHOR_HREDEB
# MAGIC     and PLAGE_HORAIRE.PLHOR_HREFIN
# MAGIC   )
# MAGIC   AND (
# MAGIC     REF_COURSE.REFCO_DATE_EXPLOIT = '2022-02-11T00:00:00.000+0000' 
# MAGIC     AND PLAGE_HORAIRE.PLHOR_MNEMO IN ('06-07', '07-09', '09-16', '16-19', '19-23')
# MAGIC     AND REF_COURSE.REFCO_TYPE_THEO IN (0)
# MAGIC     AND REF_COURSE.REFCO_MNEMO_LG IN ('A')
# MAGIC   )

# COMMAND ----------

# MAGIC 
# MAGIC %sql
# MAGIC 
# MAGIC select * from (
# MAGIC SELECT
# MAGIC   REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC   REF_COURSE.REFCO_MNEMO_LG,
# MAGIC   cast(REF_COURSE.REFCO_NO_CH_THEO as int),
# MAGIC   decode(REF_COURSE.REFCO_SENS_THEO,'A','Aller','R','Retour','') as sensTheo,
# MAGIC   POINT.REFPT_MNEMO_LONG,
# MAGIC   count((REC_ARRET.RECAR_REFPT_ID)),
# MAGIC   cast(REC_ARRET.RECAR_ECART_DEP as int),
# MAGIC   cast(REC_ARRET.RECAR_DIST_THEO as int),
# MAGIC   VERS_POINT.VERPT_NOM,
# MAGIC   TRANCHE_HORAIRE.TRHOR_MNEMO,
# MAGIC   VUE_HRE_THEO_ARRET.DESCOPT_HRE_PASS,
# MAGIC   VUE_HRE_THEO_ARRET.DESCOPT_TPS_BAT,
# MAGIC   REC_ARRET.RECAR_HRE_DEP_THEO,
# MAGIC   cast(unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO)+  REC_ARRET.RECAR_ECART_DEP as int),
# MAGIC   cast((unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO) +REC_ARRET.RECAR_ECART_DEP) as timestamp),
# MAGIC   row_number() OVER (
# MAGIC     PARTITION BY REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC     REF_COURSE.REFCO_MNEMO_LG,
# MAGIC     REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC     decode(REF_COURSE.REFCO_SENS_THEO,'A','Aller','R','Retour','')
# MAGIC   order by REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC     REF_COURSE.REFCO_MNEMO_LG,
# MAGIC     REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC     decode(REF_COURSE.REFCO_SENS_THEO,'A','Aller','R','Retour','')) as numLigne,
# MAGIC     size(collect_set(POINT.REFPT_MNEMO_LONG) over (partition by REF_COURSE.REFCO_NO_CH_THEO)) as nbArretChainage,
# MAGIC     case when (row_number() OVER (
# MAGIC     PARTITION BY REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC     REF_COURSE.REFCO_MNEMO_LG,
# MAGIC     REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC     decode(REF_COURSE.REFCO_SENS_THEO,'A','Aller','R','Retour','')
# MAGIC   order by REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC     REF_COURSE.REFCO_MNEMO_LG,
# MAGIC     REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC     decode(REF_COURSE.REFCO_SENS_THEO,'A','Aller','R','Retour',''))) <= (size(collect_set(POINT.REFPT_MNEMO_LONG) over (partition by REF_COURSE.REFCO_NO_CH_THEO)))-2 then  count((REC_ARRET.RECAR_REFPT_ID)) else null end as nbDataRef,
# MAGIC    -- =Si ([_N° ligne]<=([_Nombre d'arrêt dans contexte chainage]-2)) Alors([Nb de mesures]),
# MAGIC  --  =Somme(Si (([Avance retard (sec)]>=[__59s]) Et([Avance retard (sec)]<=[__3mn59])) Alors ([Nb de mesures])) à l'heure
# MAGIC    case when (cast(REC_ARRET.RECAR_ECART_DEP as int)>=-59 and cast(REC_ARRET.RECAR_ECART_DEP as int)<=239) then count(REC_ARRET.RECAR_REFPT_ID) else 0 end as aLHeure 
# MAGIC FROM
# MAGIC   SAEBUS.REC_ARRET,
# MAGIC   SAEBUS.VUE_HRE_THEO_ARRET,
# MAGIC   SAEBUS.REF_COURSE,
# MAGIC   SAEBUS.RECCO_COM,
# MAGIC   SAEBUS.REC_CALENDRIER,
# MAGIC   SAEBUS.REF_POINT  POINT,
# MAGIC   SAEBUS.VERS_POINT,
# MAGIC   SAEBUS.TRANCHE_HORAIRE,
# MAGIC   SAEBUS.LIEN_TRANCHE_SEGMENT,
# MAGIC   SAEBUS.SEGMENT_HORAIRE,
# MAGIC   SAEBUS.LIEN_SEGMENT_PLAGE,
# MAGIC   SAEBUS.PLAGE_HORAIRE
# MAGIC WHERE
# MAGIC   ( REF_COURSE.REFCO_ID=REC_ARRET.RECAR_ID  )
# MAGIC   AND  ( REF_COURSE.REFCO_DATE_EXPLOIT=REC_CALENDRIER.CAL_DATE_EXPLOIT  )
# MAGIC   AND  ( REC_ARRET.RECAR_ID=VUE_HRE_THEO_ARRET.RECAR_ID and REC_ARRET.RECAR_REFPT_ID=VUE_HRE_THEO_ARRET.RECAR_REFPT_ID  )
# MAGIC   AND  ( REF_COURSE.REFCO_ID=RECCO_COM.RECCOM_ID  )
# MAGIC   AND  ( TRANCHE_HORAIRE.TRHOR_MNEMO=LIEN_TRANCHE_SEGMENT.TRSEG_MNEMO_TR  )
# MAGIC   AND  ( LIEN_TRANCHE_SEGMENT.TRSEG_MNEMO_SEG=SEGMENT_HORAIRE.SEGHOR_MNEMO  )
# MAGIC   AND  ( LIEN_SEGMENT_PLAGE.SEGPL_MNEMO_SEG=SEGMENT_HORAIRE.SEGHOR_MNEMO  )
# MAGIC   AND  ( PLAGE_HORAIRE.PLHOR_MNEMO=LIEN_SEGMENT_PLAGE.SEGPL_MNEMO_PL  )
# MAGIC   AND  ( REF_COURSE.REFCO_HRE_DEP_THEO between PLAGE_HORAIRE.PLHOR_HREDEB and PLAGE_HORAIRE.PLHOR_HREFIN
# MAGIC   )
# MAGIC   AND  ( REF_COURSE.REFCO_HRE_DEP_THEO between PLAGE_HORAIRE.PLHOR_HREDEB and PLAGE_HORAIRE.PLHOR_HREFIN  )
# MAGIC   AND  ( REC_ARRET.RECAR_REFPT_ID=POINT.REFPT_ID  )
# MAGIC   AND  ( REC_ARRET.RECAR_REFPT_ID=VERS_POINT.VERPT_REFPT_ID
# MAGIC AND VERS_POINT.verpt_date_vers = (select max(verpt_date_vers) from vers_point vpt2 where vpt2.verpt_refpt_id = VERS_POINT.verpt_refpt_id)  )
# MAGIC   AND  
# MAGIC 
# MAGIC    REC_CALENDRIER.CAL_DATE_EXPLOIT='2022-02-11T00:00:00.000+0000'
# MAGIC   
# MAGIC  AND  
# MAGIC    REF_COURSE.REFCO_MNEMO_LG  IN  ( '01' )
# MAGIC    AND
# MAGIC    TRANCHE_HORAIRE.TRHOR_MNEMO  IN  ( 'IQ_F10H'  )
# MAGIC    AND
# MAGIC    ( REF_COURSE.REFCO_TYPE_THEO=0  )
# MAGIC    AND
# MAGIC    decode(REC_ARRET.RECAR_TYPE_PT,'Y','Oui','N','Non','')  IN  ( 'Oui'  )
# MAGIC    AND
# MAGIC    decode(REF_COURSE.REFCO_FLAG_GRAPH,'0','Non','1','Oui','Oui')  =  'Oui'
# MAGIC    AND
# MAGIC    DECODE(RECCO_COM.RECCOM_FLAG_OK,'Y','Complète','E','Incomplète','N','Invalidée par l''utilisateur','D','Déviée et non relocalisée',RECCO_COM.RECCOM_FLAG_OK)  =  'Complète'
# MAGIC    AND
# MAGIC    RECCO_COM.RECCOM_FLAG_OK  =  'Y'
# MAGIC    AND
# MAGIC    Decode(REC_ARRET.RECAR_FLAG_DEVIA,'Y','Oui','Non')  =  'Non'
# MAGIC    AND
# MAGIC    decode(REF_COURSE.REFCO_FLAG_REAL_THEO,'1','Oui','Non')  IN  ( 'Oui'  )
# MAGIC   
# MAGIC GROUP BY
# MAGIC   REF_COURSE.REFCO_DATE_EXPLOIT, 
# MAGIC   REF_COURSE.REFCO_MNEMO_LG, 
# MAGIC   REF_COURSE.REFCO_NO_CH_THEO, 
# MAGIC   decode(REF_COURSE.REFCO_SENS_THEO,'A','Aller','R','Retour',''), 
# MAGIC   POINT.REFPT_MNEMO_LONG, 
# MAGIC   cast(REC_ARRET.RECAR_ECART_DEP as int), 
# MAGIC   REC_ARRET.RECAR_DIST_THEO, 
# MAGIC   VERS_POINT.VERPT_NOM, 
# MAGIC   TRANCHE_HORAIRE.TRHOR_MNEMO, 
# MAGIC   VUE_HRE_THEO_ARRET.DESCOPT_HRE_PASS,
# MAGIC   VUE_HRE_THEO_ARRET.DESCOPT_TPS_BAT, 
# MAGIC   REC_ARRET.RECAR_HRE_DEP_THEO,
# MAGIC   unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO)+  REC_ARRET.RECAR_ECART_DEP,
# MAGIC   cast((unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO) +REC_ARRET.RECAR_ECART_DEP) as timestamp)
# MAGIC   )
# MAGIC   order by 
# MAGIC     REFCO_DATE_EXPLOIT, 
# MAGIC     REFCO_MNEMO_LG, 
# MAGIC     REFCO_NO_CH_THEO, 
# MAGIC     sensTheo,
# MAGIC     REFPT_MNEMO_LONG, 
# MAGIC     unix_seconds(RECAR_HRE_DEP_THEO)+  RECAR_ECART_DEP

# COMMAND ----------

# MAGIC %sql
# MAGIC 
# MAGIC --Ponctualite BUS
# MAGIC SELECT
# MAGIC   REFCO_DATE_EXPLOIT,
# MAGIC   REFCO_MNEMO_LG,
# MAGIC   REFCO_NO_CH_THEO,
# MAGIC   sensTheo,
# MAGIC   REFCO_MNEMO_SB,
# MAGIC   REFCO_NO_SV,
# MAGIC   REFPT_MNEMO_LONG,
# MAGIC   RECAR_REFPT_ID,
# MAGIC   RECAR_ECART_DEP,
# MAGIC   RECAR_DIST_THEO,
# MAGIC   VERPT_NOM,
# MAGIC   TRHOR_MNEMO,
# MAGIC   DESCOPT_HRE_PASS,
# MAGIC   DESCOPT_TPS_BAT,
# MAGIC   RECAR_HRE_DEP_THEO,
# MAGIC   REFCO_RANG,
# MAGIC   DepartReelArretSeconds,
# MAGIC   DepartReelArret,
# MAGIC   numLigne,
# MAGIC   nbArretChainage,
# MAGIC   nbDataRef,
# MAGIC   aLHeure,
# MAGIC   case
# MAGIC     when (nbDataRef> 0) then aLHeure
# MAGIC     else 0 
# MAGIC   end as aLHeureRef
# MAGIC FROM
# MAGIC   (
# MAGIC     SELECT
# MAGIC       REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC       REF_COURSE.REFCO_MNEMO_LG,
# MAGIC       cast(REF_COURSE.REFCO_NO_CH_THEO as int) as REFCO_NO_CH_THEO,
# MAGIC       decode(
# MAGIC         REF_COURSE.REFCO_SENS_THEO,
# MAGIC         'A',
# MAGIC         'Aller',
# MAGIC         'R',
# MAGIC         'Retour',
# MAGIC         ''
# MAGIC       ) as sensTheo,
# MAGIC       REF_COURSE.REFCO_MNEMO_SB,
# MAGIC       REF_COURSE.REFCO_NO_SV,
# MAGIC       POINT.REFPT_MNEMO_LONG,
# MAGIC       REC_ARRET.RECAR_REFPT_ID,
# MAGIC       cast(REC_ARRET.RECAR_ECART_DEP as int) as RECAR_ECART_DEP,
# MAGIC       cast(REC_ARRET.RECAR_DIST_THEO as int) as RECAR_DIST_THEO,
# MAGIC       VERS_POINT.VERPT_NOM,
# MAGIC       TRANCHE_HORAIRE.TRHOR_MNEMO,
# MAGIC       VUE_HRE_THEO_ARRET.DESCOPT_HRE_PASS,
# MAGIC       VUE_HRE_THEO_ARRET.DESCOPT_TPS_BAT,
# MAGIC       REC_ARRET.RECAR_HRE_DEP_THEO,
# MAGIC       REFCO_RANG,
# MAGIC       cast(
# MAGIC         unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO) + REC_ARRET.RECAR_ECART_DEP as int
# MAGIC       ) as DepartReelArretSeconds,
# MAGIC       cast(
# MAGIC         (
# MAGIC           unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO) + REC_ARRET.RECAR_ECART_DEP
# MAGIC         ) as timestamp
# MAGIC       ) as DepartReelArret,
# MAGIC       row_number() OVER (
# MAGIC         PARTITION BY REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC         REF_COURSE.REFCO_MNEMO_LG,
# MAGIC         REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC         REF_COURSE.REFCO_MNEMO_SB,
# MAGIC         REF_COURSE.REFCO_RANG
# MAGIC         order by
# MAGIC           REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC           REF_COURSE.REFCO_MNEMO_LG,
# MAGIC           REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC           REF_COURSE.REFCO_MNEMO_SB,
# MAGIC           REC_ARRET.RECAR_HRE_DEP_THEO,
# MAGIC           REF_COURSE.REFCO_RANG
# MAGIC       ) as numLigne,
# MAGIC       size(
# MAGIC         collect_set(POINT.REFPT_MNEMO_LONG) over (partition by REF_COURSE.REFCO_NO_CH_THEO)
# MAGIC       ) as nbArretChainage,
# MAGIC       case
# MAGIC         when row_number() OVER (
# MAGIC           PARTITION BY REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC           REF_COURSE.REFCO_MNEMO_LG,
# MAGIC           REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC           REF_COURSE.REFCO_MNEMO_SB,
# MAGIC           REF_COURSE.REFCO_RANG
# MAGIC           order by
# MAGIC             REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC             REF_COURSE.REFCO_MNEMO_LG,
# MAGIC             REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC             REF_COURSE.REFCO_MNEMO_SB,
# MAGIC             REC_ARRET.RECAR_HRE_DEP_THEO,
# MAGIC             REF_COURSE.REFCO_RANG
# MAGIC         ) <= (
# MAGIC           size(
# MAGIC             collect_set(POINT.REFPT_MNEMO_LONG) over (partition by REF_COURSE.REFCO_NO_CH_THEO)
# MAGIC           )
# MAGIC         ) -2 then 1
# MAGIC         else null
# MAGIC       end as nbDataRef,
# MAGIC       case
# MAGIC         when (
# MAGIC           cast(REC_ARRET.RECAR_ECART_DEP as int) >= -59
# MAGIC           and cast(REC_ARRET.RECAR_ECART_DEP as int) <= 239
# MAGIC           and (
# MAGIC             REF_COURSE.REFCO_SENS_THEO = 'R'
# MAGIC             or(
# MAGIC               REF_COURSE.REFCO_SENS_THEO = 'A'
# MAGIC               and REF_COURSE.REFCO_MNEMO_LG <> 'GSJEAN'
# MAGIC             )
# MAGIC           )
# MAGIC         ) then 1
# MAGIC         else 0
# MAGIC       end as aLHeure
# MAGIC     FROM
# MAGIC       SAEBUS.REC_ARRET,
# MAGIC       SAEBUS.VUE_HRE_THEO_ARRET,
# MAGIC       SAEBUS.REF_COURSE,
# MAGIC       SAEBUS.RECCO_COM,
# MAGIC       SAEBUS.REC_CALENDRIER,
# MAGIC       SAEBUS.REF_POINT POINT,
# MAGIC       SAEBUS.VERS_POINT,
# MAGIC       SAEBUS.TRANCHE_HORAIRE,
# MAGIC       SAEBUS.LIEN_TRANCHE_SEGMENT,
# MAGIC       SAEBUS.SEGMENT_HORAIRE,
# MAGIC       SAEBUS.LIEN_SEGMENT_PLAGE,
# MAGIC       SAEBUS.PLAGE_HORAIRE
# MAGIC     WHERE
# MAGIC       (REF_COURSE.REFCO_ID = REC_ARRET.RECAR_ID)
# MAGIC       AND (
# MAGIC         REF_COURSE.REFCO_DATE_EXPLOIT = REC_CALENDRIER.CAL_DATE_EXPLOIT
# MAGIC       )
# MAGIC       AND (
# MAGIC         REC_ARRET.RECAR_ID = VUE_HRE_THEO_ARRET.RECAR_ID
# MAGIC         and REC_ARRET.RECAR_REFPT_ID = VUE_HRE_THEO_ARRET.RECAR_REFPT_ID
# MAGIC       )
# MAGIC       AND (REF_COURSE.REFCO_ID = RECCO_COM.RECCOM_ID)
# MAGIC       AND (
# MAGIC         TRANCHE_HORAIRE.TRHOR_MNEMO = LIEN_TRANCHE_SEGMENT.TRSEG_MNEMO_TR
# MAGIC       )
# MAGIC       AND (
# MAGIC         LIEN_TRANCHE_SEGMENT.TRSEG_MNEMO_SEG = SEGMENT_HORAIRE.SEGHOR_MNEMO
# MAGIC       )
# MAGIC       AND (
# MAGIC         LIEN_SEGMENT_PLAGE.SEGPL_MNEMO_SEG = SEGMENT_HORAIRE.SEGHOR_MNEMO
# MAGIC       )
# MAGIC       AND (
# MAGIC         PLAGE_HORAIRE.PLHOR_MNEMO = LIEN_SEGMENT_PLAGE.SEGPL_MNEMO_PL
# MAGIC       )
# MAGIC       AND (
# MAGIC         REF_COURSE.REFCO_HRE_DEP_THEO between PLAGE_HORAIRE.PLHOR_HREDEB
# MAGIC         and PLAGE_HORAIRE.PLHOR_HREFIN
# MAGIC       )
# MAGIC       AND (
# MAGIC         REF_COURSE.REFCO_HRE_DEP_THEO between PLAGE_HORAIRE.PLHOR_HREDEB
# MAGIC         and PLAGE_HORAIRE.PLHOR_HREFIN
# MAGIC       )
# MAGIC       AND (REC_ARRET.RECAR_REFPT_ID = POINT.REFPT_ID)
# MAGIC       AND (
# MAGIC         REC_ARRET.RECAR_REFPT_ID = VERS_POINT.VERPT_REFPT_ID
# MAGIC         AND VERS_POINT.verpt_date_vers = (
# MAGIC           select
# MAGIC             max(verpt_date_vers)
# MAGIC           from
# MAGIC             vers_point vpt2
# MAGIC           where
# MAGIC             vpt2.verpt_refpt_id = VERS_POINT.verpt_refpt_id
# MAGIC         )
# MAGIC       )
# MAGIC       AND REC_CALENDRIER.CAL_DATE_EXPLOIT = '2022-02-11T00:00:00.000+0000'
# MAGIC       AND REF_COURSE.REFCO_MNEMO_LG IN ('01')
# MAGIC       AND TRANCHE_HORAIRE.TRHOR_MNEMO IN ('IQ_F10H')
# MAGIC       AND (REF_COURSE.REFCO_TYPE_THEO = 0)
# MAGIC       AND decode(
# MAGIC         REC_ARRET.RECAR_TYPE_PT,
# MAGIC         'Y',
# MAGIC         'Oui',
# MAGIC         'N',
# MAGIC         'Non',
# MAGIC         ''
# MAGIC       ) IN ('Oui')
# MAGIC       AND decode(
# MAGIC         REF_COURSE.REFCO_FLAG_GRAPH,
# MAGIC         '0',
# MAGIC         'Non',
# MAGIC         '1',
# MAGIC         'Oui',
# MAGIC         'Oui'
# MAGIC       ) = 'Oui'
# MAGIC       AND DECODE(
# MAGIC         RECCO_COM.RECCOM_FLAG_OK,
# MAGIC         'Y',
# MAGIC         'Complète',
# MAGIC         'E',
# MAGIC         'Incomplète',
# MAGIC         'N',
# MAGIC         'Invalidée par l''utilisateur',
# MAGIC         'D',
# MAGIC         'Déviée et non relocalisée',
# MAGIC         RECCO_COM.RECCOM_FLAG_OK
# MAGIC       ) = 'Complète'
# MAGIC       AND RECCO_COM.RECCOM_FLAG_OK = 'Y'
# MAGIC       AND Decode(REC_ARRET.RECAR_FLAG_DEVIA, 'Y', 'Oui', 'Non') = 'Non'
# MAGIC       AND decode(
# MAGIC         REF_COURSE.REFCO_FLAG_REAL_THEO,
# MAGIC         '1',
# MAGIC         'Oui',
# MAGIC         'Non'
# MAGIC       ) IN ('Oui')
# MAGIC     ORDER BY
# MAGIC       REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC       REF_COURSE.REFCO_MNEMO_LG,
# MAGIC       REF_COURSE.REFCO_MNEMO_SB,
# MAGIC       REF_COURSE.REFCO_NO_SV,
# MAGIC       REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC       REC_ARRET.RECAR_HRE_DEP_THEO
# MAGIC   )

# COMMAND ----------

# MAGIC %sql
# MAGIC 
# MAGIC --Ponctualite BUS terminus
# MAGIC 
# MAGIC SELECT
# MAGIC   REFCO_DATE_EXPLOIT,
# MAGIC   REFCO_MNEMO_LG,
# MAGIC   REFCO_NO_CH_THEO,
# MAGIC   sensTheo,
# MAGIC   REFCO_MNEMO_SB,
# MAGIC   REFCO_NO_SV,
# MAGIC   REFPT_MNEMO_LONG,
# MAGIC   RECAR_REFPT_ID,
# MAGIC   RECAR_ECART_DEP,
# MAGIC   RECAR_DIST_THEO,
# MAGIC   VERPT_NOM,
# MAGIC   TRHOR_MNEMO,
# MAGIC   DESCOPT_HRE_PASS,
# MAGIC   DESCOPT_TPS_BAT,
# MAGIC   RECAR_HRE_DEP_THEO,
# MAGIC   REFCO_RANG,
# MAGIC   DepartReelArretSeconds,
# MAGIC   DepartReelArret,
# MAGIC   numLigne,
# MAGIC   nbArretChainage,
# MAGIC   nbDataRef,
# MAGIC   aLHeure,
# MAGIC   case
# MAGIC     when (nbDataRef> 0) then aLHeure
# MAGIC     else 0 
# MAGIC   end as aLHeureRef
# MAGIC FROM
# MAGIC   (
# MAGIC     SELECT
# MAGIC       REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC       REF_COURSE.REFCO_MNEMO_LG,
# MAGIC       cast(REF_COURSE.REFCO_NO_CH_THEO as int) as REFCO_NO_CH_THEO,
# MAGIC       decode(
# MAGIC         REF_COURSE.REFCO_SENS_THEO,
# MAGIC         'A',
# MAGIC         'Aller',
# MAGIC         'R',
# MAGIC         'Retour',
# MAGIC         ''
# MAGIC       ) as sensTheo,
# MAGIC       REF_COURSE.REFCO_MNEMO_SB,
# MAGIC       REF_COURSE.REFCO_NO_SV,
# MAGIC       POINT.REFPT_MNEMO_LONG,
# MAGIC       REC_ARRET.RECAR_REFPT_ID,
# MAGIC       cast(REC_ARRET.RECAR_ECART_DEP as int) as RECAR_ECART_DEP,
# MAGIC       cast(REC_ARRET.RECAR_DIST_THEO as int) as RECAR_DIST_THEO,
# MAGIC       VERS_POINT.VERPT_NOM,
# MAGIC       TRANCHE_HORAIRE.TRHOR_MNEMO,
# MAGIC       VUE_HRE_THEO_ARRET.DESCOPT_HRE_PASS,
# MAGIC       VUE_HRE_THEO_ARRET.DESCOPT_TPS_BAT,
# MAGIC       REC_ARRET.RECAR_HRE_DEP_THEO,
# MAGIC       REFCO_RANG,
# MAGIC       cast(
# MAGIC         unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO) + REC_ARRET.RECAR_ECART_DEP as int
# MAGIC       ) as DepartReelArretSeconds,
# MAGIC       cast(
# MAGIC         (
# MAGIC           unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO) + REC_ARRET.RECAR_ECART_DEP
# MAGIC         ) as timestamp
# MAGIC       ) as DepartReelArret,
# MAGIC       row_number() OVER (
# MAGIC         PARTITION BY REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC         REF_COURSE.REFCO_MNEMO_LG,
# MAGIC         REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC         REF_COURSE.REFCO_MNEMO_SB,
# MAGIC         REF_COURSE.REFCO_RANG
# MAGIC         order by
# MAGIC           REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC           REF_COURSE.REFCO_MNEMO_LG,
# MAGIC           REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC           REF_COURSE.REFCO_MNEMO_SB,
# MAGIC           REC_ARRET.RECAR_HRE_DEP_THEO,
# MAGIC           REF_COURSE.REFCO_RANG
# MAGIC       ) as numLigne,
# MAGIC       size(
# MAGIC         collect_set(POINT.REFPT_MNEMO_LONG) over (partition by REF_COURSE.REFCO_NO_CH_THEO)
# MAGIC       ) as nbArretChainage,
# MAGIC       case
# MAGIC         when row_number() OVER (
# MAGIC           PARTITION BY REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC           REF_COURSE.REFCO_MNEMO_LG,
# MAGIC           REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC           REF_COURSE.REFCO_MNEMO_SB,
# MAGIC           REF_COURSE.REFCO_RANG
# MAGIC           order by
# MAGIC             REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC             REF_COURSE.REFCO_MNEMO_LG,
# MAGIC             REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC             REF_COURSE.REFCO_MNEMO_SB,
# MAGIC             REC_ARRET.RECAR_HRE_DEP_THEO,
# MAGIC             REF_COURSE.REFCO_RANG
# MAGIC         ) <= (
# MAGIC           size(
# MAGIC             collect_set(POINT.REFPT_MNEMO_LONG) over (partition by REF_COURSE.REFCO_NO_CH_THEO)
# MAGIC           )
# MAGIC         ) -2 then 1
# MAGIC         else null
# MAGIC       end as nbDataRef,
# MAGIC       case
# MAGIC         when (
# MAGIC           cast(REC_ARRET.RECAR_ECART_DEP as int) >= -59
# MAGIC           and cast(REC_ARRET.RECAR_ECART_DEP as int) <= 179
# MAGIC           and (
# MAGIC             REF_COURSE.REFCO_SENS_THEO = 'R'
# MAGIC             or(
# MAGIC               REF_COURSE.REFCO_SENS_THEO = 'A'
# MAGIC               and REF_COURSE.REFCO_MNEMO_LG <> 'GSJEAN'
# MAGIC             )
# MAGIC           )
# MAGIC         ) then 1
# MAGIC         else 0
# MAGIC       end as aLHeure
# MAGIC     FROM
# MAGIC       SAEBUS.REC_ARRET,
# MAGIC       SAEBUS.VUE_HRE_THEO_ARRET,
# MAGIC       SAEBUS.REF_COURSE,
# MAGIC       SAEBUS.RECCO_COM,
# MAGIC       SAEBUS.REC_CALENDRIER,
# MAGIC       SAEBUS.REF_POINT POINT,
# MAGIC       SAEBUS.VERS_POINT,
# MAGIC       SAEBUS.TRANCHE_HORAIRE,
# MAGIC       SAEBUS.LIEN_TRANCHE_SEGMENT,
# MAGIC       SAEBUS.SEGMENT_HORAIRE,
# MAGIC       SAEBUS.LIEN_SEGMENT_PLAGE,
# MAGIC       SAEBUS.PLAGE_HORAIRE
# MAGIC     WHERE
# MAGIC       (REF_COURSE.REFCO_ID = REC_ARRET.RECAR_ID)
# MAGIC       AND (
# MAGIC         REF_COURSE.REFCO_DATE_EXPLOIT = REC_CALENDRIER.CAL_DATE_EXPLOIT
# MAGIC       )
# MAGIC       AND (
# MAGIC         REC_ARRET.RECAR_ID = VUE_HRE_THEO_ARRET.RECAR_ID
# MAGIC         and REC_ARRET.RECAR_REFPT_ID = VUE_HRE_THEO_ARRET.RECAR_REFPT_ID
# MAGIC       )
# MAGIC       AND (REF_COURSE.REFCO_ID = RECCO_COM.RECCOM_ID)
# MAGIC       AND (
# MAGIC         TRANCHE_HORAIRE.TRHOR_MNEMO = LIEN_TRANCHE_SEGMENT.TRSEG_MNEMO_TR
# MAGIC       )
# MAGIC       AND (
# MAGIC         LIEN_TRANCHE_SEGMENT.TRSEG_MNEMO_SEG = SEGMENT_HORAIRE.SEGHOR_MNEMO
# MAGIC       )
# MAGIC       AND (
# MAGIC         LIEN_SEGMENT_PLAGE.SEGPL_MNEMO_SEG = SEGMENT_HORAIRE.SEGHOR_MNEMO
# MAGIC       )
# MAGIC       AND (
# MAGIC         PLAGE_HORAIRE.PLHOR_MNEMO = LIEN_SEGMENT_PLAGE.SEGPL_MNEMO_PL
# MAGIC       )
# MAGIC       AND (
# MAGIC         REF_COURSE.REFCO_HRE_DEP_THEO between PLAGE_HORAIRE.PLHOR_HREDEB
# MAGIC         and PLAGE_HORAIRE.PLHOR_HREFIN
# MAGIC       )
# MAGIC       AND (
# MAGIC         REF_COURSE.REFCO_HRE_DEP_THEO between PLAGE_HORAIRE.PLHOR_HREDEB
# MAGIC         and PLAGE_HORAIRE.PLHOR_HREFIN
# MAGIC       )
# MAGIC       AND (REC_ARRET.RECAR_REFPT_ID = POINT.REFPT_ID)
# MAGIC       AND (
# MAGIC         REC_ARRET.RECAR_REFPT_ID = VERS_POINT.VERPT_REFPT_ID
# MAGIC         AND VERS_POINT.verpt_date_vers = (
# MAGIC           select
# MAGIC             max(verpt_date_vers)
# MAGIC           from
# MAGIC             vers_point vpt2
# MAGIC           where
# MAGIC             vpt2.verpt_refpt_id = VERS_POINT.verpt_refpt_id
# MAGIC         )
# MAGIC       )
# MAGIC       AND REC_CALENDRIER.CAL_DATE_EXPLOIT = '2022-02-11T00:00:00.000+0000'
# MAGIC       AND REF_COURSE.REFCO_MNEMO_LG IN ('01')
# MAGIC       AND TRANCHE_HORAIRE.TRHOR_MNEMO IN ('IQ_F10H')
# MAGIC       AND (REF_COURSE.REFCO_TYPE_THEO = 0)
# MAGIC       AND decode(
# MAGIC         REC_ARRET.RECAR_TYPE_PT,
# MAGIC         'Y',
# MAGIC         'Oui',
# MAGIC         'N',
# MAGIC         'Non',
# MAGIC         ''
# MAGIC       ) IN ('Oui')
# MAGIC       AND decode(
# MAGIC         REF_COURSE.REFCO_FLAG_GRAPH,
# MAGIC         '0',
# MAGIC         'Non',
# MAGIC         '1',
# MAGIC         'Oui',
# MAGIC         'Oui'
# MAGIC       ) = 'Oui'
# MAGIC       AND DECODE(
# MAGIC         RECCO_COM.RECCOM_FLAG_OK,
# MAGIC         'Y',
# MAGIC         'Complète',
# MAGIC         'E',
# MAGIC         'Incomplète',
# MAGIC         'N',
# MAGIC         'Invalidée par l''utilisateur',
# MAGIC         'D',
# MAGIC         'Déviée et non relocalisée',
# MAGIC         RECCO_COM.RECCOM_FLAG_OK
# MAGIC       ) = 'Complète'
# MAGIC       AND RECCO_COM.RECCOM_FLAG_OK = 'Y'
# MAGIC       AND Decode(REC_ARRET.RECAR_FLAG_DEVIA, 'Y', 'Oui', 'Non') = 'Non'
# MAGIC       AND decode(
# MAGIC         REF_COURSE.REFCO_FLAG_REAL_THEO,
# MAGIC         '1',
# MAGIC         'Oui',
# MAGIC         'Non'
# MAGIC       ) IN ('Oui')
# MAGIC     ORDER BY
# MAGIC       REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC       REF_COURSE.REFCO_MNEMO_LG,
# MAGIC       REF_COURSE.REFCO_MNEMO_SB,
# MAGIC       REF_COURSE.REFCO_NO_SV,
# MAGIC       REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC       REC_ARRET.RECAR_HRE_DEP_THEO
# MAGIC   )
# MAGIC   where numLigne =1

# COMMAND ----------

# MAGIC %sql
# MAGIC 
# MAGIC select 
# MAGIC 
# MAGIC DATE_EXPLOITATION,
# MAGIC MNEMO_LIGNE,
# MAGIC MNEMO_ARRET,
# MAGIC SENS_THEO,
# MAGIC sum(DataCorrectes) as DataCorrectes, 
# MAGIC sum(DataTotales) as DataTotales
# MAGIC 
# MAGIC from (
# MAGIC 
# MAGIC 
# MAGIC SELECT
# MAGIC   REF_COURSE.REFCO_DATE_EXPLOIT as DATE_EXPLOITATION,
# MAGIC   REF_COURSE.REFCO_MNEMO_LG AS MNEMO_LIGNE,
# MAGIC   REF_COURSE.REFCO_NO_CH_THEO AS NO_CHAINAGE_THEO,
# MAGIC   decode(REF_COURSE.REFCO_SENS_THEO,'A','Aller','R','Retour','') as SENS_THEO,
# MAGIC   POINT.REFPT_MNEMO_LONG AS MNEMO_ARRET,
# MAGIC   REC_ARRET.RECAR_HRE_DEP_THEO as HEURE_DEPART_APPLI_ARRET, 
# MAGIC   unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO) as SECOND_HEURE_DEPART_APPLI_ARRET, 
# MAGIC   (to_timestamp(REC_ARRET.RECAR_HRE_DEP_THEO, 'yyyy-MM-dd hh:mm:ss'))+ make_interval(0, 0, 0, 0, 0, 0,  REC_ARRET.RECAR_ECART_DEP)  as HEURE_DEPART_REELLE_ARRET,
# MAGIC     unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO)+REC_ARRET.RECAR_ECART_DEP as SECOND_HEURE_DEPART_REELLE_ARRET,
# MAGIC    lag(unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO),+1)  OVER (PARTITION BY REF_COURSE.REFCO_DATE_EXPLOIT,REF_COURSE.REFCO_MNEMO_LG,REF_COURSE.REFCO_NO_CH_THEO,REF_COURSE.REFCO_SENS_THEO,REF_COURSE.REFCO_NO_CH_THEO,POINT.REFPT_MNEMO_LONG  ORDER BY REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC     REF_COURSE.REFCO_MNEMO_LG ,
# MAGIC     REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC     decode(REF_COURSE.REFCO_SENS_THEO,'A','Aller','R','Retour',''),
# MAGIC     POINT.REFPT_MNEMO_LONG,
# MAGIC     unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO)+REC_ARRET.RECAR_ECART_DEP) as lag_SECOND_HEURE_DEPART_APPLI_ARRET,
# MAGIC     lag(  unix_seconds((to_timestamp(REC_ARRET.RECAR_HRE_DEP_THEO, 'yyyy-MM-dd hh:mm:ss'))+ make_interval(0, 0, 0, 0, 0, 0,  REC_ARRET.RECAR_ECART_DEP))  ,+1)  OVER (PARTITION BY REF_COURSE.REFCO_DATE_EXPLOIT,REF_COURSE.REFCO_MNEMO_LG,REF_COURSE.REFCO_NO_CH_THEO,REF_COURSE.REFCO_SENS_THEO,REF_COURSE.REFCO_NO_CH_THEO,POINT.REFPT_MNEMO_LONG  ORDER BY REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC     REF_COURSE.REFCO_MNEMO_LG ,
# MAGIC     REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC     decode(REF_COURSE.REFCO_SENS_THEO,'A','Aller','R','Retour',''),
# MAGIC     POINT.REFPT_MNEMO_LONG,
# MAGIC     unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO)+REC_ARRET.RECAR_ECART_DEP) as lag_SECOND_HEURE_DEPART_REELLE_ARRET,
# MAGIC 
# MAGIC     
# MAGIC     unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO)- lag(unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO),+1)  OVER (PARTITION BY REF_COURSE.REFCO_DATE_EXPLOIT,REF_COURSE.REFCO_MNEMO_LG,REF_COURSE.REFCO_NO_CH_THEO,REF_COURSE.REFCO_SENS_THEO,REF_COURSE.REFCO_NO_CH_THEO,POINT.REFPT_MNEMO_LONG ORDER BY REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC     REF_COURSE.REFCO_MNEMO_LG ,
# MAGIC     REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC     decode(REF_COURSE.REFCO_SENS_THEO,'A','Aller','R','Retour',''),
# MAGIC     POINT.REFPT_MNEMO_LONG,
# MAGIC     unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO)+REC_ARRET.RECAR_ECART_DEP) as diff_SECOND_HEURE_DEPART_APPLI_ARRET,
# MAGIC 
# MAGIC     
# MAGIC     unix_seconds((to_timestamp(REC_ARRET.RECAR_HRE_DEP_THEO, 'yyyy-MM-dd hh:mm:ss'))+ make_interval(0, 0, 0, 0, 0, 0,  REC_ARRET.RECAR_ECART_DEP)) -lag(  unix_seconds((to_timestamp(REC_ARRET.RECAR_HRE_DEP_THEO, 'yyyy-MM-dd hh:mm:ss'))+ make_interval(0, 0, 0, 0, 0, 0,  REC_ARRET.RECAR_ECART_DEP))  ,+1)  OVER (PARTITION BY REF_COURSE.REFCO_DATE_EXPLOIT,REF_COURSE.REFCO_MNEMO_LG,REF_COURSE.REFCO_NO_CH_THEO,REF_COURSE.REFCO_SENS_THEO,REF_COURSE.REFCO_NO_CH_THEO,POINT.REFPT_MNEMO_LONG ORDER BY REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC     REF_COURSE.REFCO_MNEMO_LG ,
# MAGIC     REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC     decode(REF_COURSE.REFCO_SENS_THEO,'A','Aller','R','Retour',''),
# MAGIC     POINT.REFPT_MNEMO_LONG,
# MAGIC     unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO)+REC_ARRET.RECAR_ECART_DEP) as diff_SECOND_HEURE_DEPART_REELLE_ARRET,
# MAGIC     
# MAGIC     
# MAGIC  (unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO)- unix_seconds(lag(REC_ARRET.RECAR_HRE_DEP_THEO,+1)  OVER (PARTITION BY REF_COURSE.REFCO_DATE_EXPLOIT,REF_COURSE.REFCO_MNEMO_LG,REF_COURSE.REFCO_NO_CH_THEO,REF_COURSE.REFCO_SENS_THEO,REF_COURSE.REFCO_NO_CH_THEO,POINT.REFPT_MNEMO_LONG  ORDER BY REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC     REF_COURSE.REFCO_MNEMO_LG ,
# MAGIC     REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC     decode(REF_COURSE.REFCO_SENS_THEO,'A','Aller','R','Retour',''),
# MAGIC     POINT.REFPT_MNEMO_LONG,
# MAGIC     unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO)+REC_ARRET.RECAR_ECART_DEP))) + 179 as SECOND_HEURE_DEPART_APPLI_ARRET_SEUIL,
# MAGIC 
# MAGIC case when 
# MAGIC     (unix_seconds((to_timestamp(REC_ARRET.RECAR_HRE_DEP_THEO, 'yyyy-MM-dd hh:mm:ss'))+ make_interval(0, 0, 0, 0, 0, 0,  REC_ARRET.RECAR_ECART_DEP)) -lag(  unix_seconds((to_timestamp(REC_ARRET.RECAR_HRE_DEP_THEO, 'yyyy-MM-dd hh:mm:ss'))+ make_interval(0, 0, 0, 0, 0, 0,  REC_ARRET.RECAR_ECART_DEP))  ,+1)  OVER (PARTITION BY REF_COURSE.REFCO_DATE_EXPLOIT,REF_COURSE.REFCO_MNEMO_LG,REF_COURSE.REFCO_NO_CH_THEO,REF_COURSE.REFCO_SENS_THEO,REF_COURSE.REFCO_NO_CH_THEO,POINT.REFPT_MNEMO_LONG ORDER BY REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC     REF_COURSE.REFCO_MNEMO_LG ,
# MAGIC     REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC     decode(REF_COURSE.REFCO_SENS_THEO,'A','Aller','R','Retour',''),
# MAGIC     POINT.REFPT_MNEMO_LONG,
# MAGIC     unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO)+REC_ARRET.RECAR_ECART_DEP) <=  (unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO)- unix_seconds(lag(REC_ARRET.RECAR_HRE_DEP_THEO,+1)  OVER (PARTITION BY REF_COURSE.REFCO_DATE_EXPLOIT,REF_COURSE.REFCO_MNEMO_LG,REF_COURSE.REFCO_NO_CH_THEO,REF_COURSE.REFCO_SENS_THEO,REF_COURSE.REFCO_NO_CH_THEO,POINT.REFPT_MNEMO_LONG  ORDER BY REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC     REF_COURSE.REFCO_MNEMO_LG ,
# MAGIC     REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC     decode(REF_COURSE.REFCO_SENS_THEO,'A','Aller','R','Retour',''),
# MAGIC     POINT.REFPT_MNEMO_LONG,
# MAGIC     unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO)+REC_ARRET.RECAR_ECART_DEP))) + 179) then 1 else 0 end as DataCorrectes,
# MAGIC 
# MAGIC case when 
# MAGIC     (unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO)- lag(unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO),+1)  OVER (PARTITION BY REF_COURSE.REFCO_DATE_EXPLOIT,REF_COURSE.REFCO_MNEMO_LG,REF_COURSE.REFCO_NO_CH_THEO,REF_COURSE.REFCO_SENS_THEO,REF_COURSE.REFCO_NO_CH_THEO,POINT.REFPT_MNEMO_LONG ORDER BY REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC     REF_COURSE.REFCO_MNEMO_LG ,
# MAGIC     REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC     decode(REF_COURSE.REFCO_SENS_THEO,'A','Aller','R','Retour',''),
# MAGIC     POINT.REFPT_MNEMO_LONG,
# MAGIC     unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO)+REC_ARRET.RECAR_ECART_DEP)  is null) then 0 else 1 end as DataTotales
# MAGIC 
# MAGIC 
# MAGIC 
# MAGIC FROM
# MAGIC   REC_ARRET,
# MAGIC   REF_COURSE,
# MAGIC   RECCO_COM,
# MAGIC   REC_CALENDRIER,
# MAGIC   REF_POINT  POINT,
# MAGIC   TRANCHE_HORAIRE,
# MAGIC   LIEN_TRANCHE_SEGMENT,
# MAGIC   SEGMENT_HORAIRE,
# MAGIC   LIEN_SEGMENT_PLAGE,
# MAGIC   PLAGE_HORAIRE
# MAGIC WHERE
# MAGIC 
# MAGIC    REF_COURSE.REFCO_MNEMO_LG  IN  ( '01'  )
# MAGIC    and 
# MAGIC    TRANCHE_HORAIRE.TRHOR_MNEMO  IN  ( 'IQ_F10F'  )
# MAGIC    AND
# MAGIC    decode(REC_ARRET.RECAR_TYPE_PT,'Y','Oui','N','Non','')  IN  ( 'Oui'  )
# MAGIC    AND
# MAGIC    ( REF_COURSE.REFCO_TYPE_THEO=0  )
# MAGIC    AND
# MAGIC    decode(REF_COURSE.REFCO_FLAG_GRAPH,'0','Non','1','Oui','Oui')  =  'Oui'
# MAGIC    AND
# MAGIC    DECODE(RECCO_COM.RECCOM_FLAG_OK,'Y','Complète','E','Incomplète','N','Invalidée par l''utilisateur','D','Déviée et non relocalisée',RECCO_COM.RECCOM_FLAG_OK)  =  'Complète'
# MAGIC    AND
# MAGIC    RECCO_COM.RECCOM_FLAG_OK  =  'Y'
# MAGIC    AND
# MAGIC    Decode(REC_ARRET.RECAR_FLAG_DEVIA,'Y','Oui','Non')  =  'Non'
# MAGIC    AND
# MAGIC    decode(REF_COURSE.REFCO_FLAG_REAL_THEO,'1','Oui','Non')  IN  ( 'Oui'  )
# MAGIC 
# MAGIC --AND 
# MAGIC 
# MAGIC --    (
# MAGIC --    (REF_COURSE.REFCO_SENS_THEO in ('A') and POINT.REFPT_MNEMO_LONG not in ('GSJEAN','AEROGA','AER01A'))
# MAGIC --    or
# MAGIC --    (REF_COURSE.REFCO_SENS_THEO in ('R') and POINT.REFPT_MNEMO_LONG not in ('GSJEAN','STJ09R'))
# MAGIC --    )
# MAGIC    and
# MAGIC   ( REF_COURSE.REFCO_ID=REC_ARRET.RECAR_ID  )
# MAGIC   AND  ( REF_COURSE.REFCO_DATE_EXPLOIT=REC_CALENDRIER.CAL_DATE_EXPLOIT  )
# MAGIC   AND  ( REF_COURSE.REFCO_ID=RECCO_COM.RECCOM_ID  )
# MAGIC   AND  ( TRANCHE_HORAIRE.TRHOR_MNEMO=LIEN_TRANCHE_SEGMENT.TRSEG_MNEMO_TR  )
# MAGIC   AND  ( LIEN_TRANCHE_SEGMENT.TRSEG_MNEMO_SEG=SEGMENT_HORAIRE.SEGHOR_MNEMO  )
# MAGIC   AND  ( LIEN_SEGMENT_PLAGE.SEGPL_MNEMO_SEG=SEGMENT_HORAIRE.SEGHOR_MNEMO  )
# MAGIC   AND  ( PLAGE_HORAIRE.PLHOR_MNEMO=LIEN_SEGMENT_PLAGE.SEGPL_MNEMO_PL  )
# MAGIC   AND  ( REF_COURSE.REFCO_HRE_DEP_THEO between PLAGE_HORAIRE.PLHOR_HREDEB and PLAGE_HORAIRE.PLHOR_HREFIN
# MAGIC   )
# MAGIC   AND  ( REF_COURSE.REFCO_HRE_DEP_THEO between PLAGE_HORAIRE.PLHOR_HREDEB and PLAGE_HORAIRE.PLHOR_HREFIN  )
# MAGIC   AND  ( REC_ARRET.RECAR_REFPT_ID=POINT.REFPT_ID  )
# MAGIC   AND  
# MAGIC   REC_CALENDRIER.CAL_DATE_EXPLOIT='2022-02-11T00:00:00.000+0000'
# MAGIC   
# MAGIC   order by 
# MAGIC     REF_COURSE.REFCO_DATE_EXPLOIT,
# MAGIC     REF_COURSE.REFCO_MNEMO_LG ,
# MAGIC     REF_COURSE.REFCO_NO_CH_THEO,
# MAGIC     decode(REF_COURSE.REFCO_SENS_THEO,'A','Aller','R','Retour',''),
# MAGIC     POINT.REFPT_MNEMO_LONG,
# MAGIC     unix_seconds(REC_ARRET.RECAR_HRE_DEP_THEO)+REC_ARRET.RECAR_ECART_DEP
# MAGIC     
# MAGIC     )
# MAGIC 
# MAGIC where 
# MAGIC 
# MAGIC    (
# MAGIC    (SENS_THEO in ('Aller') and MNEMO_ARRET not in ('GSJEAN','AEROGA','AER01A'))
# MAGIC    or
# MAGIC    (SENS_THEO in ('Retour') and MNEMO_ARRET not in ('GSJEAN','STJ09R'))
# MAGIC    )
# MAGIC     group by 
# MAGIC 
# MAGIC DATE_EXPLOITATION,
# MAGIC MNEMO_LIGNE,
# MAGIC MNEMO_ARRET,
# MAGIC SENS_THEO

# COMMAND ----------


